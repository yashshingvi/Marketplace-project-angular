{"version":3,"sources":["./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/environments/environment.ts","./src/app/get-active-sell-request/get-active-sell-request.component.ts","./src/app/get-active-sell-request/get-active-sell-request.component.html","./src/app/maxbid/maxbid.component.ts","./src/app/maxbid/maxbid.component.html","./src/app/registrationfarmer/Farmer.ts","./src/app/farmer.service.ts","./src/app/registrationfarmer/registrationfarmer.component.ts","./src/app/registrationfarmer/registrationfarmer.component.html","./src/app/place-sellreq-service.service.ts","./src/app/edit-component/edit-component.component.ts","./src/app/edit-component/edit-component.component.html","./src/app/view-details-service.service.ts","./src/app/bidinfo/bidinfo.component.ts","./src/app/bidinfo/bidinfo.component.html","./src/app/sample/sample.component.ts","./src/app/sample/sample.component.html","./src/app/admin-request/admin-request.component.ts","./src/app/admin-request/admin-request.component.html","./src/app/bidder-dashboard/bidder-dashboard.component.ts","./src/app/bidder-dashboard/bidder-dashboard.component.html","./src/app/edit.service.ts","./src/app/bidderhistory/bidderhistory.component.ts","./src/app/bidderhistory/bidderhistory.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/show-history/show-history.component.ts","./src/app/show-history/show-history.component.html","./src/app/admin-requests.service.ts","./src/app/show-history.service.ts","./src/app/app.module.ts","./src/app/get-active-sell-request.service.ts","./src/app/login.service.ts","./src/app/Login.ts","./src/app/help/help.component.ts","./src/app/help/help.component.html","./src/app/set-password/set-password.component.ts","./src/app/set-password/set-password.component.html","./src/app/pic-upload/pic-upload.component.ts","./src/app/pic-upload/pic-upload.component.html","./src/app/Requests.ts","./src/app/bidder.service.ts","./src/app/farmer-dashboard/farmer-dashboard.component.ts","./src/app/farmer-dashboard/farmer-dashboard.component.html","./src/app/bidservice.service.ts","./src/app/view-details/view-details.component.ts","./src/app/view-details/view-details.component.html","./src/app/place-sellrequest/place-sellrequest.component.ts","./src/app/place-sellrequest/place-sellrequest.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register-bidder/register-bidder.component.ts","./src/app/register-bidder/register-bidder.component.html","./src/app/editprofilefarmer/editprofilefarmer.component.ts","./src/app/editprofilefarmer/editprofilefarmer.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<div id=\"carouselExampleDark\" class=\"carousel carousel-dark slide\" data-bs-ride=\"carousel\">\n  <ol class=\"carousel-indicators\">\n    <li data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"0\" class=\"active\"></li>\n    <li data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"1\"></li>\n    <li data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"2\"></li>\n  </ol>\n  <div class=\"carousel-inner\">\n    <div class=\"carousel-item active\" data-bs-interval=\"10000\">\n      <div class=\"c1\">\n      <img src=\"assets/images/photo1.jpg\" class=\"d-block w-100\" alt=\"...\">\n      </div>\n      \n    </div>\n    <div class=\"carousel-item\" data-bs-interval=\"2000\">\n      <div class=\"c1\">\n      <img src=\"assets/images/photo4.jpg\" class=\"d-block w-100\" alt=\"...\">\n      </div>\n\n    </div>\n    <div class=\"carousel-item\">\n      <div class=\"c1\">\n      <img src=\"assets/images/photo3.jpg\" class=\"d-block w-100\" alt=\"...\">\n      </div>\n      \n    </div>\n  </div>\n  <a class=\"carousel-control-prev\" href=\"#carouselExampleDark\" role=\"button\" data-bs-slide=\"prev\">\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n    <span class=\"visually-hidden\">Previous</span>\n  </a>\n  <a class=\"carousel-control-next\" href=\"#carouselExampleDark\" role=\"button\" data-bs-slide=\"next\">\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n    <span class=\"visually-hidden\">Next</span>\n  </a>\n</div>\n\n\n<!-----------------------------text section -------------------------->\n<div>\n<div class=\"card\">\n  <h5 class=\"card-header\">Terms and Conditions\n  </h5>\n  <div class=\"card-body\">\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\"> One User Account Per Person / IP Address / House is allowed</li>\n      <li class=\"list-group-item\"> Group Bidding is strictly not allowed</li>\n      <li class=\"list-group-item\"> Do not use any 3rd party bidding softwares of bots for bidding</li>\n      <li class=\"list-group-item\">Misleading USER IDs are not allowed - Please don't try your tricks</li>\n      <li class=\"list-group-item\">   Violation of rules will result in Suspension of your account</li>\n    </ul>\n  </div>\n</div>\n\n</div>\n<!----------------------------------footer------------------------->\n\n<!-- <footer class=\"container-fluid text-center\">\n  <p>2021<i class=\"fa fa-copyright\" aria-hidden=\"true\"></i> LTI MarketPlace</p>\n</footer> -->\n\n \n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\nimport { GetActiveSellRequestService } from '../get-active-sell-request.service';\n\n@Component({\n  selector: 'app-get-active-sell-request',\n  templateUrl: './get-active-sell-request.component.html',\n  styleUrls: ['./get-active-sell-request.component.css'],\n})\nexport class GetActiveSellRequestComponent implements OnInit {\nchangeText:boolean;\n  type: string;\n  sellRequest: SellRequest = new SellRequest();\n  public list: SellRequest[] = [];\n  constructor(private getreq: GetActiveSellRequestService) {}\n  flag: boolean = false;\n  searchedKeyword: string;\n  // today:any;\n  visible: boolean;\n  today = new Date().toISOString().slice(0, 10);\n\n  ngOnInit(): void {\n    this.type = sessionStorage.getItem('type');\n    this.flag = false;\n    this.changeText=false;\n  }\n\n  go() {\n    this.getreq.fetchActiveSellRequest().subscribe((response) => {\n      // alert(JSON.stringify(response));\n      this.list = response;\n      console.log(this.list);\n    });\n  }\n  placeBid($event, req) {\n    this.sellRequest=req;\n\n    sessionStorage.setItem('sellRequestId', req.id);\n    this.flag = true;\n  }\n  ngAfterContentInit() {\n    this.go();\n  }\n\n  // comparedate(l : any) : void{\n  //     this.today = new Date().toISOString().slice(0, 10);\n  //      console.log(this.today);\n  //      let d1 = new Date(l.startDate);\n\n  //      //should not\n  //        if (d1 > this.today)\n  //        {\n  //          l.status=false;\n  //         //  return true;\n  //        }\n\n  //       else if (d1 < this.today) {\n  //         l.status = true;\n  //         // return true;\n  //       }\n  //       else  {\n  //         l.status = true;\n  //         // return true;\n  //       }\n\n  //   }\n}\n\nexport class SellRequest {\n  id: number;\n  cropName: string;\n  cropType: string;\n  basePrice: number;\n  quantity: number;\n  phValue: Number;\n  fertlizerType: string;\n  sellerId: number;\n  startDate: Date;\n  endDate: Date;\n  status: boolean;\n}\n","\n<div class=\"row\">\n  <div class=\"col-6 mt-5\">\n    <!-- <div class=\"form-group col-md-12\">\n      <input type=\"text\" class=\"form-control\"  placeholder=\"Enter CropName\" [(ngModel)]=\"searchedKeyword\">\n    </div> -->\n\n    <div class=\"input-group input-group-sm mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">  <i class=\"fa fa-search icon\"></i></span>  \n      </div>\n      <input type=\"text\" name=\"t1\" [(ngModel)]=\"searchedKeyword\" placeholder=\"Enter Crop Name To Search\" required class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n    </div>\n<!-- <div class=\"card\"> -->\n    <div class=\"border border-dark\">\n     \n      <table class=\"table table-striped table-hover table-dark\" id=\"tbl1\" (mouseover)=\"changeText=true\" (mouseout)=\"changeText=false\">\n        <thead >\n          <tr>\n            <th>CropName</th>\n            <th>Base Price</th>\n            <th>quantity</th>\n            <th *ngIf=\"type == 'BIDDER'\"></th>\n            <th>Status</th>\n            <th *ngIf=\"changeText\"></th>\n            \n          </tr>\n        </thead>\n        <tbody id=\"white\" class=\"table table-striped table-dark\">\n          <tr *ngFor=\"let l of list | filter:searchedKeyword\">\n            <td>{{ l.cropName }}</td>\n            <td>{{ l.basePrice }}</td>\n            <td>{{ l.quantity }}</td>\n\n            <td *ngIf=\"type == 'BIDDER'\">\n              <button (click)=\"placeBid($event, l)\" [disabled]=\"l.startDate > today\" class=\"btn btn-outline-success\">\n                BID\n              </button>\n            </td>\n            <td>\n              <div class=\"live\" *ngIf=\"l.startDate <= today\">\n              <span class=\"badge rounded-pill bg-danger\">Live\n              </span>\n              </div>\n              <div *ngIf=\"l.startDate > today\"><span class=\"badge rounded-pill bg-secondary\">Upcoming</span>\n              </div>\n            </td>\n            <td  *ngIf=\"changeText\" id=\"ddd\">\n              <div *ngIf=\"l.startDate <= today\">\n              <span >Last date {{l.endDate}}\n              </span>\n              </div>\n              <div *ngIf=\"l.startDate > today\"><span>Starts on {{l.startDate}}</span>\n              </div>\n            </td>\n            \n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <!-- </div> -->\n\n  <div class=\"col-6 mt-5 offset-0.5\">\n    <app-maxbid *ngIf=\"flag\" [data1]=\"sellRequest\"></app-maxbid>\n    <app-bidderhistory *ngIf=\"flag\" [data1]=\"sellRequest\"></app-bidderhistory>\n    <app-bidinfo *ngIf=\"flag\" [data]=\"sellRequest\"></app-bidinfo>\n  </div>\n</div>","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { BidserviceService } from '../bidservice.service';\nimport { SellRequest } from '../get-active-sell-request/get-active-sell-request.component';\n\n@Component({\n  selector: 'app-maxbid',\n  templateUrl: './maxbid.component.html',\n  styleUrls: ['./maxbid.component.css'],\n})\nexport class MaxbidComponent implements OnInit, OnChanges {\n  sellRequestId: number;\n  data: any;\n  bidderId: number;\n  @Input()\n  data1: SellRequest;\n  constructor(private bidservice: BidserviceService) {}\n  ngOnChanges() {\n    this.checkMaxBid(this.data1.id)\n    // console.log(\"id:\");\n    // console.log(this.data.id);\n    // if(this.data==0){\n    //   this.data=this.data1.basePrice;\n    // }\n  }\n  ngOnInit(): void {\n    // this.sellRequestId=(parseInt(sessionStorage.getItem('sellRequestId'), 10));\n    this.checkMaxBid(this.data1.id);\n  }\n\n  checkMaxBid(sellRId: number) {\n    // alert(this.sellRequestId);\n    this.bidservice.fetchMaxBid(sellRId).subscribe((data) => {\n      this.data = data;\n      // alert(JSON.stringify(data));\n    });\n  }\n\n}\n","\n<!-- <form (ngSubmit)=\"checkMaxBid()\">\n    Enter the sellRequest Id : <input type=\"number\" name=\"sellRequestId\" [(ngModel)]=sellRequestId  /> <br />\n    <button type=\"submit\">Max Bid</button>\n</form> -->\n<div class=\"card border-success mb-3\" style=\"max-width: 100%;\">\n    <div class=\"card-header\">Last Bid:</div>\n    <div class=\"card-body text-success\">\n      <h5 class=\"card-title\" *ngIf=\"data\">${{data}}</h5>\n      <p class=\"card-text\">Make this crop yours, last date to bid is <span class=\"blink_me\">{{data1.endDate}}</span> </p>\n      <a class=\"btn btn-sm btn-outline-info\" data-bs-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n        Previous Bids\n      </a>\n    </div>\n  </div>\n<!-- <div *ngIf=\"data\">Min. Bid Amount: {{data}}</div> -->\n","\r\nexport class Farmer {\r\n  name: string=\"\"\r\n  email: string=\"\"\r\n  mobileNo:string=\"\"\r\n  address:string=\"\"\r\n  city:string=\"\"\r\n  state:string=\"\"\r\n  pincode:string=\"\"\r\n  accountNo:string=\"\"\r\n  ifscCode:string=\"\"\r\n  aadharNo:string=\"\"\r\n  area:string=\"\"\r\n  status:number=2\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Farmer } from \"./registrationfarmer/Farmer\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FarmerService {\n\n  //constructor() { }\n   //constructor(private customerService : CustomerService) { }\n   constructor(private http : HttpClient){}\n   ngOnInit(): void {\n     \n   }\n \n   register(farmer:Farmer):Observable<any>{\n     let url = \"http://localhost:8094/register-farmer\";\n     return this.http.post(url,farmer);\n     //alert(JSON.stringify(this.customer));\n   }\n\n   edit(farmer:Farmer):Observable<any>{\n    let url = \"http://localhost:8094/edit-farmer\";\n    return this.http.post(url,farmer);\n    //alert(JSON.stringify(this.customer));\n  }\n\n  getFarmer(id : number) : Observable<any>{\n    let url = \"http://localhost:8094/view-profile-farmer?id=\"+id;\n    return this.http.get(url);\n  }\n\n  picUpload(formData : FormData) : Observable<any>{\n    let url=\"http://localhost:8094/certificate-upload\";\n    return this.http.post(url,formData);\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { FarmerService } from '../farmer.service';\nimport { Farmer } from './Farmer';\n\n@Component({\n  selector: 'app-registrationfarmer',\n  templateUrl: './registrationfarmer.component.html',\n  styleUrls: ['./registrationfarmer.component.css']\n})\nexport class RegistrationfarmerComponent {\n  response:any;\n  farmer: Farmer = new Farmer();\n  constructor(private farmerService : FarmerService, private router: Router) { }\n  //constructor(private http : HttpClient){}\n  displayName:string;\n  message:string;\n\n  register(){\n    // this.displayName=(JSON.stringify(\"Hello \"+this.farmer.name));\n    this.farmerService.register(this.farmer).subscribe(response=>{\n      this.response=response;\n      // alert(JSON.stringify(response))\n      // alert(this.response);\n      sessionStorage.setItem(\"id\", String(this.farmer.email));\n      sessionStorage.setItem(\"type\", \"FARMER\");\n      if(this.response.status=='SUCCESS')\n          this.router.navigate(['setPassword']);\n    });\n  \n\n}\n\n}\n\n\n"," <div class=\"container min-vh-100 min-vw-100\" id=\"bg\">\n  <div class=\"row h-100 justify-content-center align-items-center\">\n    <div class=\"container\" style=\"margin-top: 70px\">\n      <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3\">\n          <div>\n            <div *ngIf=\"response\">\n              <div class=\"alert alert-danger mt-4\" role=\"alert\" *ngIf=\"response.status == 'FAILED'\"\n                style=\"padding: 5px\">\n                {{ response.message }}\n              </div>\n              <div class=\"alert alert-success mt-4\" role=\"alert\" *ngIf=\"response.status == 'SUCCESS'\"\n                style=\"padding: 5px\">\n                {{ response.message }}\n              </div>\n            </div>\n            <form class=\"was-validated needs-validation\" #registerForm=\"ngForm\"\n              (ngSubmit)=\"registerForm.form.valid && register()\" novalidate>\n              <fieldset>\n                <legend style=\"text-align: center\">REGISTRATION FARMER</legend>\n                <div class=\"form-group\">\n                  <div class=\"input-group input-group-sm mb-3 has-validation\">\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                        <i class=\"fa fa-user icon\"></i></span>\n                    </div>\n                    <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\"\n                      aria-describedby=\"inputGroup-sizing-sm\" name=\"t1\" placeholder=\"Full Name\"\n                      [(ngModel)]=\"farmer.name\" #t1=\"ngModel\" required />\n                    <!-- <small class=\"text-danger\"\n          *ngIf=\"(t1.touched || registerForm.submitted) && t1.errors?.required\">\n          Name is required \n          </small>  -->\n                  </div>\n                  <div class=\"input-group input-group-sm mb-3 has-validation\">\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                        <i class=\"fa fa fa-phone icon\"></i></span>\n                    </div>\n                    <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\"\n                      aria-describedby=\"inputGroup-sizing-sm\" name=\"t2\" placeholder=\"Contact Number\" minlength=\"10\"\n                      [(ngModel)]=\"farmer.mobileNo\" #t2=\"ngModel\" required />\n                    <!-- <small class=\"text-danger\" \n          *ngIf=\"(t2.touched || registerForm.submitted) && t2.errors?.required\">\n          Contact number is required\n          </small>  -->\n                    <div *ngIf=\"t2.errors\">\n                      <div class=\"invalid-tooltip\" *ngIf=\"\n                          t2.errors.minlength &&\n                          (t2.touched || registerForm.submitted)\n                        \">\n                        <!-- Phone number requiredLength is {{t2.errors.minlength?.requiredLength}} -->\n                        Please choose a unique and valid contact number\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"input-group input-group-sm mb-3 has-validation\">\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                        <i class=\"fa fa-envelope icon\"></i></span>\n                    </div>\n                    <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\"\n                      aria-describedby=\"inputGroup-sizing-sm\" name=\"t3\" placeholder=\"Email Address\"\n                      [(ngModel)]=\"farmer.email\" #t3=\"ngModel\" required />\n                    <!-- <small class=\"text-danger\"\n          *ngIf=\"(t3.touched || registerForm.submitted) && t3.errors?.required\">\n          Email is required\n          </small>  -->\n                  </div>\n                  <div class=\"input-group input-group-sm mb-3 has-validation\">\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                        <i class=\"fa fa-home icon\"></i></span>\n                    </div>\n                    <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\"\n                      aria-describedby=\"inputGroup-sizing-sm\" name=\"t4\" placeholder=\"Address\"\n                      [(ngModel)]=\"farmer.address\" #t4=\"ngModel\" required />\n                    <!-- <small class=\"text-danger\"\n          *ngIf=\"(t4.touched || registerForm.submitted) && t4.errors?.required\">\n          Address is required\n          </small>  -->\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col md-6\">\n                      <div class=\"input-group input-group-sm mb-3 has-validation\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                            <i class=\"fa fa-street-view icon\"></i></span>\n                        </div>\n                        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\"\n                          aria-describedby=\"inputGroup-sizing-sm\" name=\"t11\" placeholder=\"Area\"\n                          [(ngModel)]=\"farmer.area\" #t11=\"ngModel\" required />\n                        <!-- <small class=\"text-danger\"\n          *ngIf=\"(t11.touched || registerForm.submitted) && t11.errors?.required\">\n          Area is required\n          </small>  -->\n                      </div>\n                    </div>\n\n                    <div class=\"col md-6\">\n                      <div class=\"input-group input-group-sm mb-3 has-validation\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                            <i class=\"fa fa-location-arrow icon\"></i></span>\n                        </div>\n                        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\"\n                          aria-describedby=\"inputGroup-sizing-sm\" name=\"t5\" placeholder=\"City\" [(ngModel)]=\"farmer.city\"\n                          #t5=\"ngModel\" required />\n                        <!-- <small class=\"text-danger\"\n          *ngIf=\"(t5.touched || registerForm.submitted) && t5.errors?.required\">\n          City is required\n          </small>  -->\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col md-6\">\n                      <div class=\"input-group input-group-sm mb-3 has-validation\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                            <i class=\"fa fa-map-marker icon\"></i></span>\n                        </div>\n                        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\"\n                          aria-describedby=\"inputGroup-sizing-sm\" name=\"t6\" placeholder=\"State\"\n                          [(ngModel)]=\"farmer.state\" #t6=\"ngModel\" required />\n                        <!-- <small class=\"text-danger\"\n          *ngIf=\"(t6.touched || registerForm.submitted) && t6.errors?.required\">\n          State is required\n          </small>  -->\n                      </div>\n                    </div>\n                    <div class=\"col md-6\">\n                      <div class=\"input-group input-group-sm mb-3 has-validation\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                            <i class=\"fa fa-map-pin icon\"></i></span>\n                        </div>\n                        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\"\n                          aria-describedby=\"inputGroup-sizing-sm\" name=\"t7\" placeholder=\"Pincode\"\n                          [(ngModel)]=\"farmer.pincode\" #t7=\"ngModel\" required />\n                        <!-- <small class=\"text-danger\"\n          *ngIf=\"(t7.touched || registerForm.submitted) && t7.errors?.required\">\n          Pincode is required\n          </small>  -->\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"col md-6\">\n                      <div class=\"input-group input-group-sm mb-3 has-validation\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                            <i class=\"fa fa-dollar icon\"></i></span>\n                        </div>\n                        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\"\n                          aria-describedby=\"inputGroup-sizing-sm\" name=\"t8\" placeholder=\"Account Number\"\n                          [(ngModel)]=\"farmer.accountNo\" #t8=\"ngModel\" required />\n                        <!-- <small class=\"text-danger\"\n          *ngIf=\"(t8.touched || registerForm.submitted) && t8.errors?.required\">\n          Account Number is required\n          </small>  -->\n                      </div>\n                    </div>\n\n                    <div class=\"col md-6\">\n                      <div class=\"input-group input-group-sm mb-3 has-validation\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                            <i class=\"fa fa-dollar icon\"></i></span>\n                        </div>\n                        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\"\n                          aria-describedby=\"inputGroup-sizing-sm\" name=\"t9\" placeholder=\"IFSC Code\"\n                          [(ngModel)]=\"farmer.ifscCode\" #t9=\"ngModel\" required />\n                        <!-- <small class=\"text-danger\"\n          *ngIf=\"(t9.touched || registerForm.submitted) && t9.errors?.required\">\n          Ifsc Code is required\n          </small>  -->\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"input-group input-group-sm mb-3 has-validation\">\n                    <div class=\"input-group-prepend\">\n                      <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                        <i class=\"fa fa-dollar icon\"></i></span>\n                    </div>\n                    <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\"\n                      aria-describedby=\"inputGroup-sizing-sm\" name=\"t10\" placeholder=\"Aadhar Number\" minlength=\"12\"\n                      [(ngModel)]=\"farmer.aadharNo\" #t10=\"ngModel\" required />\n                    <!-- <small class=\"text-danger\"\n          *ngIf=\"(t10.touched || registerForm.submitted) && t10.errors?.required\">\n          Aadhaar Number is required\n          </small> -->\n                    <div *ngIf=\"t10.errors\">\n                      <div class=\"invalid-tooltip\" *ngIf=\"\n                          t10.errors.minlength &&\n                          (t10.touched || registerForm.submitted)\n                        \">\n                        <!-- AadharNo requiredLength is {{t10.errors.minlength?.requiredLength}}</small> -->\n                        Please choose a unique and valid Aadhaar Number\n                      </div>\n                    </div>\n                  </div>\n\n                  <button class=\"btn btn-primary col-md-6 offset-md-3\" type=\"submit\">\n                    Register\n                  </button>\n                </div>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- address:string=\"\"\n    city:string=\"\"\n    state:string=\"\"\n    pincode:string=\"\"\n    accountNo:string=\"\"\n    ifscCode:string=\"\" -->","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SellRequest } from './place-sellrequest/place-sellrequest.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceSellreqServiceService {\n\n  constructor(private http : HttpClient) { }\n\n  register(sellreq: SellRequest) : Observable<any>{\n    let url = \"http://localhost:8094/register-sellreq\";\n    return this.http.post(url,sellreq);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { EditService } from '../edit.service';\n\n@Component({\n  selector: 'app-edit-component',\n  templateUrl: './edit-component.component.html',\n  styleUrls: ['./edit-component.component.css']\n})\nexport class EditComponentComponent implements OnInit {\n\n  b:Bidder = new Bidder();\n  response:any;\n//  report:any;\n  id:number ;\n\n  constructor(private getreq:EditService) { }\n\n  ngOnInit(): void {\n    //this.id = sessionStorage.getItem('id');\n    this.id = parseInt(sessionStorage.getItem('lid'), 10);\n    this.getreq.getBidder(this.id).subscribe(response => {\n      // alert(JSON.stringify(response));\n      this.response = response;\n      this.b.id = response.id;\n      this.b.name = response.name;\n      this.b.address = response.address;\n      this.b.city =response.city;\n      this.b.city =response.city;\n      this.b.state = response.state;\n      this.b.pincode =response.pincode;\n      this.b.mobileNo = response.mobileNo;\n      this.b.adhaarNo = response.adhaarNo;\n      this.b.accountNo = response.accountNo;\n      this.b.traderLicense =response.traderLicense;\n      this.b.ifscCode =response.ifscCode;\n      this.b.email =response.email;\n\n      });\n\n  }\n\n  update(){\n\n    alert(JSON.stringify(this.b));\n    this.getreq.update(this.b).subscribe(response =>{\n      this.response = response;\n      // alert(JSON.stringify(response));\n      setTimeout(function(){​​\n        // this.router.navigate([\"login\"]);\n        window.location.reload();\n       }​​, 2000);\n    })\n    // if(this.response.status=='SUCCESS')\n          // this.router.navigate(['setPassword']);\n\n }\n\n\n}\n\nexport class Bidder{\n  id:number;\n  name:string;\n  address:string;\n  city:string;\n  state:string;\n  pincode:string;\n  mobileNo:string;\n  adhaarNo:string;\n  accountNo:string;\n  traderLicense:string;\n  ifscCode:string;\n  status:number =2;\n  email:string;  \n}\n\n","<!-- <h3>Profile Info</h3>\n<form (ngSubmit)=\"update()\">\n  Id : <input type=\"text\" value={{b.id}} name=\"t12\" readonly><br>\n  Name : <input type=\"text\" name=\"t1\" value={{b.name}} [(ngModel)]=b.name /><br>\n  Address : <input type=\"text\" name=\"t2\" value={{b.address}} [(ngModel)]=b.address /><br>\n  City : <input type=\"text\" name=\"t3\" value={{b.city}} [(ngModel)]=b.city /><br>\n  State : <input type=\"text\" name=\"t4\" value={{b.state}} [(ngModel)]=b.state /><br>\n  pinCode : <input type=\"text\" name=\"t5\" value={{b.pincode}} [(ngModel)]=b.pincode /><br>\n  Mobile No : <input type=\"text\" name=\"t6\" value={{b.mobileNo}}  [(ngModel)]=b.mobileNo /><br>\n  Aadhar No : <input type=\"text\" name=\"t7\" value={{b.adhaarNo}}  [(ngModel)]=b.adhaarNo /><br>\n  Account No : <input type=\"text\" name=\"t8\" value={{b.accountNo}} [(ngModel)]=b.accountNo /><br>\n  Trader License No : <input type=\"text\" name=\"t9\" value={{b.traderLicense}} [(ngModel)]=b.traderLicense /><br>\n  IFSC Code : <input type=\"text\" name=\"t10\" value={{b.ifscCode}} [(ngModel)]=b.ifscCode /><br>\n  Email : <input type=\"text\" name=\"t11\" value={{b.email}} [(ngModel)]=b.email /><br>\n  <br>\n  <button type=\"submit\">Update</button>  \n\n  <div *ngIf=report>\n    <p>{{report.status}} ! {{report.message}}</p>\n</div>\n   -->\n<div class=\"container h-100\">\n\n  <div class=\"row h-100 justify-content-center align-items-center\">\n\n\n<div class=\"container\" style=\"margin-top: 70px;\">\n\n  <div class=\"row\">\n\n    <div class=\"col-md-6 offset-md-3\">\n      <!-- <h1 style=\"text-align: center;\">REGISTRATION BIDDER</h1> -->\n      <div>\n        <div *ngIf=\"response\">\n          <div class=\"alert alert-danger mt-4\" role=\"alert\" *ngIf=\"response.status == 'FAILED'\"\n            style=\"padding: 5px\">\n            {{ response.message }}\n          </div>\n          <div class=\"alert alert-success mt-4\" role=\"alert\" *ngIf=\"response.status == 'SUCCESS'\"\n            style=\"padding: 5px\">\n            {{ response.message }}\n          </div>\n        </div>\n<form class=\"was-validated needs-validation\" #registerForm=\"ngForm\" (ngSubmit)=\"registerForm.form.valid && update()\" novalidate>\n  <fieldset>\n  <legend style=\"text-align: center;\">Update your profile</legend>\n  \n  <div class=\"form-group\">\n    <div class=\"input-group input-group-sm mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-user icon\"></i></span>  \n      </div>\n       <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t12\" value={{b.id}} placeholder=\"ID\" [(ngModel)]=b.id #t12=\"ngModel\" readonly />\n      <!-- <small class=\"text-danger\"\n      *ngIf=\"(t1.touched || registerForm.submitted) && t1.errors?.required\">\n      Name is required \n      </small>   -->\n  </div>\n\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-user icon\"></i></span>  \n        </div>\n         <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"name=\"t1\" placeholder=\"Full Name\" value={{b.name}} [(ngModel)]=b.name #t1=\"ngModel\"required/>\n        <!-- <small class=\"text-danger\"\n        *ngIf=\"(t1.touched || registerForm.submitted) && t1.errors?.required\">\n        Name is required \n        </small>   -->\n    </div>\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-home icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t2\" placeholder=\"Address\" value={{b.address}} [(ngModel)]=b.address #t2=\"ngModel\" required />\n      <!-- <small class=\"text-danger\"\n      *ngIf=\"(t2.touched || registerForm.submitted) && t2.errors?.required\">\n      Address is required\n      </small>  -->\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col md-6\">\n\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-location-arrow icon\"></i></span>  \n    </div>\n    <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t3\" placeholder=\"City\" value={{b.city}} [(ngModel)]=b.city #t3=\"ngModel\" required/>\n    <!-- <small class=\"text-danger\"\n    *ngIf=\"(t3.touched || registerForm.submitted) && t3.errors?.required\">\n    City is required\n    </small>  -->\n    </div>\n\n    </div>\n\n    <div class=\"col md-6\">\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-map-marker icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"   name=\"t4\" placeholder=\"State\" value={{b.state}} [(ngModel)]=b.state #t4=\"ngModel\" required/>\n      <!-- <small class=\"text-danger\"\n      *ngIf=\"(t4.touched || registerForm.submitted) && t4.errors?.required\">\n      State is required\n      </small>  -->\n    </div>\n\n    </div>\n\n  </div>\n\n\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-map-pin icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"  name=\"t5\" placeholder=\"Pincode\" value={{b.pincode}} [(ngModel)]=b.pincode #t5=\"ngModel\" required />\n      <!-- <small class=\"text-danger\"\n      *ngIf=\"(t5.touched || registerForm.submitted) && t5.errors?.required\">\n      Pincode is required\n      </small>  -->\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col md-6\">\n\n      <div class=\"input-group input-group-sm mb-3 has-validation\"><label class=\"form-label\"></label>\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa fa-phone icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t6\" placeholder=\"Mobile Number\" minlength=\"10\" value={{b.mobileNo}} [(ngModel)]=b.mobileNo #t6=\"ngModel\"required/>\n      <!-- <small class=\"text-danger\" \n      *ngIf=\"(t6.touched || registerForm.submitted) && t6.errors?.required\">\n      Contact number is required\n      </small>  -->\n      <div *ngIf=\"t6.errors\">\n      <!-- <small class=\"text-danger\" *ngIf=\"t6.errors.minlength && (t6.touched || registerForm.submitted)\">\n          Phone number requiredLength is {{t6.errors.minlength?.requiredLength}}\n      </small> -->\n      <div class=\"invalid-tooltip\" *ngIf=\"t6.errors.minlength && (t6.touched || registerForm.submitted)\">\n        <!-- Phone number requiredLength is {{t6.errors.minlength?.requiredLength}} -->\n        Please choose a unique and valid contact number\n      </div></div> \n    </div>\n\n    </div>\n    <div class=\"col md-6\">\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-dollar icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t7\" placeholder=\"Adhaar Number\" minlength=\"12\" value={{b.adhaarNo}} [(ngModel)]=b.adhaarNo #t7=\"ngModel\" required/>\n      <!-- <small class=\"text-danger\"\n      *ngIf=\"(t7.touched || registerForm.submitted) && t7.errors?.required\">\n      Aadhaar Number is required\n      </small> -->\n      <div *ngIf=\"t7.errors\">\n      <small class=\"text-danger\" \n      *ngIf=\"t7.errors.minlength && (t7.touched || registerForm.submitted)\">\n            <!-- AadharNo requiredLength is {{t7.errors.minlength?.requiredLength}} -->\n            Please choose a unique and valid Aadhar Number\n    </small>\n      </div>  \n\n      </div>\n\n      </div>\n      </div>\n\n\n      <div class=\"input-group input-group-sm mb-3 has-validation\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-dollar icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t8\" placeholder=\"Account Number\" value={{b.accountNo}} [(ngModel)]=b.accountNo #t8=\"ngModel\" required />\n      <!-- <small class=\"text-danger\"\n      *ngIf=\"(t8.touched || registerForm.submitted) && t8.errors?.required\">\n      Account Number is required\n      </small>  -->\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col md-6\">\n\n      <div class=\"input-group input-group-sm mb-3 has-validation\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-dollar icon\"></i></span>  \n        </div>\n        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t9\" placeholder=\"IFSC Code\" value={{b.ifscCode}} [(ngModel)]=b.ifscCode #t9=\"ngModel\" required/>\n        <!-- <small class=\"text-danger\"\n        *ngIf=\"(t9.touched || registerForm.submitted) && t9.errors?.required\">\n        Ifsc Code is required\n        </small>  -->\n      </div>\n\n      </div>\n      <div class=\"col md-6\">\n\n      <div class=\"input-group input-group-sm mb-3 has-validation\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-dollar icon\"></i></span>  \n        </div>\n        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t10\" placeholder=\"Trader License\" value={{b.traderLicense}} [(ngModel)]=b.traderLicense #t10=\"ngModel\" required/>\n        <!-- <small class=\"text-danger\"\n        *ngIf=\"(t10.touched || registerForm.submitted) && t10.errors?.required\">\n        TraderLicence is required\n        </small>  -->\n      </div>\n\n      </div>\n      </div>\n\n      <div class=\"input-group input-group-sm mb-3 has-validation\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-envelope icon\"></i></span>  \n        </div>\n        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"name=\"t11\" placeholder=\"Email Address\" value={{b.email}} [(ngModel)]=b.email #t11=\"ngModel\" required/>\n        <!-- <small class=\"text-danger\"\n        *ngIf=\"(t11.touched || registerForm.submitted) && t11.errors?.required\">\n        Email is required\n        </small>  -->\n      </div>\n\n  <!-- FullName:<input type=\"text\" name=\"t1\" [(ngModel)]=b.name #t1=\"ngModel\" required/><br/>\n    <span class=\"text-danger\"\n    *ngIf=\"(t1.touched || registerForm.submitted) && t1.errors?.required\">\n    Name is required \n    </span> \n    <br/>\n    \n    Address:<input type=\"text\" name=\"t2\" [(ngModel)]=b.address #t2=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t2.touched || registerForm.submitted) && t2.errors?.required\">\n    Address is required\n    </span> \n    <br/>\n\n    City:<input type=\"text\" name=\"t3\" [(ngModel)]=b.city #t3=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t3.touched || registerForm.submitted) && t3.errors?.required\">\n    City is required\n    </span> \n    <br/>\n\n    State:<input type=\"text\" name=\"t4\" [(ngModel)]=b.state #t4=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t4.touched || registerForm.submitted) && t4.errors?.required\">\n    State is required\n    </span> \n    <br/>\n\n    Pincode:<input type=\"text\" name=\"t5\" [(ngModel)]=b.pincode #t5=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t5.touched || registerForm.submitted) && t5.errors?.required\">\n    Pincode is required\n    </span> \n    <br/>\n\n    Contact No:<input type=\"text\" name=\"t6\" minlength=\"10\" [(ngModel)]=b.mobileNo #t6=\"ngModel\"required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t6.touched || registerForm.submitted) && t6.errors?.required\">\n    Contact no is required\n    </span> \n    <div *ngIf=\"t6.errors\">\n        <span class=\"text-danger\" *ngIf=\"t6.errors.minlength && (t6.touched || registerForm.submitted)\">\n            Phone number requiredLength is {{t6.errors.minlength?.requiredLength}}\n        </span></div>\n    <br>\n\n    AadharNo:<input type=\"text\" name=\"t7\" minlength=\"16\" [(ngModel)]=b.adhaarNo #t7=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t7.touched || registerForm.submitted) && t7.errors?.required\">\n    AadhaarNumber is required\n    </span> \n    <div *ngIf=\"t7.errors\">\n        <span class=\"text-danger\" *ngIf=\"t7.errors.minlength && (t7.touched || registerForm.submitted)\">\n            AadharNo requiredLength is {{t7.errors.minlength?.requiredLength}}\n        </span></div>\n    <br/>\n      \n    AccountNo:<input type=\"text\" name=\"t8\" [(ngModel)]=b.accountNo #t8=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t8.touched || registerForm.submitted) && t8.errors?.required\">\n    AccountNo is required\n    </span> \n    <br/>\n\n    IFSCCode:<input type=\"text\" name=\"t9\" [(ngModel)]=b.ifscCode #t9=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t9.touched || registerForm.submitted) && t9.errors?.required\">\n    IfscCode is required\n    </span> \n    <br/>\n\n  TraderLicence :<input type=\"text\" name=\"t10\" [(ngModel)]=b.traderLicense #t10=\"ngModel\" required/><br/>\n  <span class=\"text-danger\" \n  *ngIf=\"(t10.touched || registerForm.submitted) && t10.errors?.required\">\n  TraderLicence is required\n  </span> \n  <br/>\n    \n    Email:<input type=\"email\" name=\"t11\" [(ngModel)]=b.email #t11=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t11.touched || registerForm.submitted) && t11.errors?.required\">\n    Email is required\n    </span> \n    <br/> -->\n    \n    <button class=\"btn btn-primary col-md-6 offset-md-3\" type =\"submit\">Update</button>\n  </div>\n</fieldset>\n  </form>\n  \n  </div>\n  </div>\n  </div>\n  </div>\n\n  </div>\n</div>\n  \n  \n  <!-- <div *ngIf=response>\n      <p>{{response.status}} ! {{response.message}}</p>\n  </div> -->","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewDetailsServiceService {\n\n  constructor(private http: HttpClient) {}\n  fetchDetailsFarmer(id:number): Observable<any>{\n    let url =\"http://localhost:8094/view-profile-farmer?id=\"+id;\n    return this.http.get(url);\n  }\n  fetchDetailsBidder(id:number): Observable<any>{\n    let url =\"http://localhost:8094/view-profile-bidder?id=\"+id;\n    return this.http.get(url);\n  }\n  fetchDetailsSellRequest(id:number): Observable<any>{\n    let url =\"http://localhost:8094/view-profile-sellrequest?id=\"+id;\n    return this.http.get(url);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BidserviceService } from '../bidservice.service';\n\n@Component({\n  selector: 'app-bidinfo',\n  templateUrl: './bidinfo.component.html',\n  styleUrls: ['./bidinfo.component.css']\n})\nexport class BidinfoComponent implements OnInit {\n  parameters:Array<string>=[ 'cropName',\n  'cropType',\n  'basePrice',\n  'quantity',\n  'phValue',\n  'fertlizerType'\n  ]\n  displayParameters:Array<string>=[ 'Crop Name',\n  'Crop Type',\n  'Base Price',\n  'Quantity',\n  'ph Value',\n  'Fertilizer Type'\n  ]\n  sellRequestId:number;\n  bid: Bid = new Bid();\n  // response:any;\n  message:string;\n  msg:string;\n@Input()\npublic data;\n  constructor(private bidservice: BidserviceService,private router:Router) { }\n  ngOnInit(): void {\n     \n    this.bid.bidderId=(parseInt(sessionStorage.getItem('lid'), 10));\n    this.bid.sellRequestId=(parseInt(sessionStorage.getItem('sellRequestId'), 10));\n    this.sellRequestId= this.bid.sellRequestId;\n    console.log( this.bid.bidderId);\n    console.log( this.bid.sellRequestId);\n  }\n\n  placebid() {\n    \n    this.bid.sellRequestId=(parseInt(sessionStorage.getItem('sellRequestId'), 10));\n    this.sellRequestId= this.bid.sellRequestId;\n    this.bidservice.placebid(this.bid).subscribe(response => {\n      // alert(JSON.stringify(this.bid));\n      // alert(JSON.stringify(response));\n      this.message=response.status;\n      this.msg=response.message;\n      // setTimeout(function(){ alert(\"Hello\"); }, 5000);\n      // alert(this.message);\n      setTimeout(function(){​​\n        window.location.reload();\n     }​​, 1000);\n    });\n    // this.router.navigate([\"getActiveSellRequest\"]);\n    // sessionStorage.setItem('flag',\"false\");\n    // setTimeout(function(){  }, 5000);\n    // location.reload();\n  }  \n\n}\n\nexport class Bid {\n  bidAmount: number;\n  bidderId: number;\n  sellRequestId: number;\n}","\n<div class=\"border border-dark\">\n  <table class=\"table table-striped table-hover table-dark\">\n    <thead>\n      <tr>\n        <th>Details</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody class=\"table-striped table-dark\">\n      <tr *ngFor=\"let para of parameters; let i = index\">\n        <td>{{ displayParameters[i] }}</td>\n        <td>{{ data[para] }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<div class=\"col mt-5\">\n  <div class=\"alert alert-danger mt-4\" role=\"alert\" *ngIf=\"message=='FAILED'\" style=\"padding:5px;\">\n    {{msg}}\n  </div>\n  <div class=\"alert alert-success mt-4\" role=\"alert\" *ngIf=\"message=='SUCCESS'\" style=\"padding:5px;\">\n    {{msg}}\n  </div>\n<form (ngSubmit)=\"placebid()\">\n    <div class=\"card\">\n        <h5 class=\"card-header\">Enter Bid Amount</h5>\n        <div class=\"card-body\"> \n            <div class=\"input-group mb-3\">\n            <span class=\"input-group-text\">$</span>\n            <input\n            type=\"number\"\n            name=\"t1\"\n            [(ngModel)]=\"bid.bidAmount\"\n            class=\"form-control\"\n            aria-label=\"Dollar amount (with dot and two decimal places)\"\n            step=\"50\"\n            />\n           <button class=\"btn btn-success\" type=\"submit\">Place Bid</button>\n          \n        </div>\n      </div>\n  </div>\n</form>\n\n</div>\n\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sample',\n  templateUrl: './sample.component.html',\n  styleUrls: ['./sample.component.css']\n})\nexport class SampleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div id=\"carouselExampleControls\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n    <div class=\"carousel-inner\">\n      <div class=\"carousel-item active\">\n        <img src=\"assets/photo1.jpg\" class=\"d-block w-100\" alt=\"...\">\n      </div>\n      <div class=\"carousel-item\">\n        <img src=\"assets/photo2.jpg\" class=\"d-block w-100\" alt=\"...\">\n      </div>\n      <div class=\"carousel-item\">\n        <img src=\"assets/photo3.jpg\" class=\"d-block w-100\" alt=\"...\">\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-bs-slide=\"prev\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"visually-hidden\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-bs-slide=\"next\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"visually-hidden\">Next</span>\n    </a>\n  </div> -->\n\n  <div id=\"carouselExampleDark\" class=\"carousel carousel-dark slide\" data-bs-ride=\"carousel\">\n    <ol class=\"carousel-indicators\">\n      <li data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"0\" class=\"active\"></li>\n      <li data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"1\"></li>\n      <li data-bs-target=\"#carouselExampleDark\" data-bs-slide-to=\"2\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div class=\"carousel-item active\" data-bs-interval=\"10000\">\n        <img src=\"assets/photo1.jpg\" class=\"d-block w-100\" alt=\"...\">\n        <div class=\"carousel-caption d-none d-md-block\">\n          <h5>First slide label</h5>\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n        </div>\n      </div>\n      <div class=\"carousel-item\" data-bs-interval=\"2000\">\n        <img src=\"assets/photo2.jpg\" class=\"d-block w-100\" alt=\"...\">\n        <div class=\"carousel-caption d-none d-md-block\">\n          <h5>Second slide label</h5>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n        </div>\n      </div>\n      <div class=\"carousel-item\">\n        <img src=\"assets/photo3.jpg\" class=\"d-block w-100\" alt=\"...\">\n        <div class=\"carousel-caption d-none d-md-block\">\n          <h5>Third slide label</h5>\n          <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n        </div>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" href=\"#carouselExampleDark\" role=\"button\" data-bs-slide=\"prev\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"visually-hidden\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" href=\"#carouselExampleDark\" role=\"button\" data-bs-slide=\"next\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"visually-hidden\">Next</span>\n    </a>\n  </div>","import { Component, OnInit, ɵAPP_ID_RANDOM_PROVIDER } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AdminRequestsService } from '../admin-requests.service';\nimport { Requests } from '../Requests';\n\n@Component({\n  selector: 'app-admin-request',\n  templateUrl: './admin-request.component.html',\n  styleUrls: ['./admin-request.component.css'],\n})\nexport class AdminRequestComponent implements OnInit {\n  requests: Array<Requests>;\n  req: Requests = new Requests();\n  message:string;\n  // reqObj: HandleRequest = new HandleRequest();\n  constructor(\n    private adminRequestsService: AdminRequestsService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.adminRequestsService.fetchRequests().subscribe((data) => {\n      // alert(JSON.stringify(data));\n      this.requests = data;\n    });\n  }\n  approve($event, req): void {\n    \n    if (req.type === 'FARMER') {\n      this.req.type = 1;\n    } else if (req.type === 'BIDDER') {\n      this.req.type = 2;\n    } else if (req.type === 'SELLREQUEST') {\n      this.req.type = 0;\n    }\n    this.req.id=req.id;\n     this.req.status = 1;\n    console.log(this.req);\n\n    this.adminRequestsService.approveRequests(this.req).subscribe((data) => {\n      // alert((data.message));\n      // this.requests=data;\n    });\n    // location.reload();\n    this.message=\"Approved\";\n    setTimeout(function(){​​\n      window.location.reload();\n   }​​, 1000);\n  }\n  decline($event, req): void {\n    if (req.type === 'FARMER') {\n      this.req.type = 1;\n    } else if (req.type === 'BIDDER') {\n      this.req.type = 2;\n    } else if (req.type === 'SELLREQUEST') {\n      this.req.type = 0;\n    }\n    this.req.id=req.id;\n    this.req.status = 0;\n    console.log(this.req);\n\n    this.adminRequestsService.approveRequests(this.req).subscribe((data) => {\n      // alert((data.message));\n      // this.requests=data;\n    });\n    this.message=\"Declined\";\n    setTimeout(function(){​​\n      window.location.reload();\n   }​​, 1000);\n    // location.reload();\n   \n  }\n  viewDetails($event, req): void {\n    sessionStorage.setItem('lid', req.id);\n    sessionStorage.setItem('type', req.type);\n    this.router.navigate(['/viewDetails']);\n  }\n}\n","<!-- <p>admin-request works!</p> -->\n<!-- <div *ngFor =\"let req of requests\">id:{{req.id}} type:{{req.type}} <button type=\"submit\">View details</button> <button type=\"submit\">approve</button></div> -->\n\n<div class=\"container h-100 min-vh-100 min-vw-100\" id=\"bg\">\n    <div class=\"row h-100 justify-content-center align-items-center\">\n<div  class=\"border border-dark mt-4\" style=\"width:60%;\">\n    \n    <div class=\"alert alert-danger mt-4\" role=\"alert\" *ngIf=\"message=='Declined'\" style=\"padding:5px;\">\n        {{message}}\n      </div>\n      <div class=\"alert alert-success mt-4\" role=\"alert\" *ngIf=\"message=='Approved'\" style=\"padding:5px;\">\n        {{message}}\n      </div>\n<table class=\"table table-striped table-hover table-dark\" style=\"padding:0px;\">\n    <thead>\n    <tr>\n        <th>Id</th>\n        <th>Type</th>\n        <th>Details</th>\n        <th>Status</th>\n    </tr>\n    </thead>\n     <tbody class=\"table-striped table-dark\">\n    \n        <tr *ngFor =\"let req of requests\">\n            <td>{{req.id}}</td>\n            <td><p class=\"font-italic\">{{req.type}}</p></td>\n            <td><button class=\"btn btn-link btn-md\" (click)=\"viewDetails($event, req)\">View Details</button></td>\n            <!-- <form (ngSubmit)=\"approve()\"> -->\n             <td>   \n                <div class=\"report\"><button class=\"btn btn-success btn-sm\" (click)=\"approve($event, req)\">Approve</button></div>\n                <div class=\"report\"><button class=\"btn btn-danger btn-sm\" (click)=\"decline($event, req)\">Decline</button></div>\n            </td>\n            </tr>\n        </tbody>\n</table>\n</div>\n</div>   \n</div>             \n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bidder-dashboard',\n  templateUrl: './bidder-dashboard.component.html',\n  styleUrls: ['./bidder-dashboard.component.css'],\n})\nexport class BidderDashboardComponent implements OnInit {\n  f1: boolean;\n  f2: boolean;\n  f3: boolean;\n  f4: boolean;\n  f5: boolean;\n  onGoToPage1() {\n    this.f1 = true;\n    this.f2 = false;\n    this.f3 = false;\n    this.f4 = false;\n    this.f5 = false;\n  }\n  onGoToPage2() {\n    this.f1 = false;\n    this.f2 = true;\n    this.f3 = false;\n    this.f4 = false;\n    this.f5 = false;\n  }\n  onGoToPage3() {\n    this.f1 = false;\n    this.f2 = false;\n    this.f3 = true;\n    this.f4 = false;\n    this.f5 = false;\n  }\n  onGoToPage4() {\n    this.f1 = false;\n    this.f2 = false;\n    this.f3 = false;\n    this.f4 = true;\n    this.f5 = false;\n  }\n  onGoToPage5() {\n    this.f1 = false;\n    this.f2 = false;\n    this.f3 = false;\n    this.f4 = false;\n    this.f5 = true;\n  }\n  constructor() {}\n\n  ngOnInit(): void {\n    this.f1 = true;\n    this.f2 = false;\n    this.f3 = false;\n    this.f4 = false;\n    this.f5 = false;\n  }\n}\n","<!-- <div class=\"container h-100\">\n    <div class=\"row h-100 justify-content-center align-items-center\"> -->\n        <div class=\"container min-vh-100 min-vw-100\" id=\"bg\">\n        <div class=\"row\">\n            <div class=\"col-2 mt-5 \">\n\n\n                <div class=\"bg-light border-right\" id=\"sidebar-wrapper\">\n                    \n                    <div class=\"list-group list-group-flush\">\n                        <a routerLink=\"#\" (click)=\"onGoToPage1()\"\n                            [className]=\"f1 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">Marketplace</a><br>\n                        <a routerLink=\"#\" (click)=\"onGoToPage2()\"\n                            [className]=\"f2 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">View\n                            Profile</a><br>\n                            <!-- <a routerLink=\"/viewDetails\" (click)=\"onGoToPage2()\"\n                            [className]=\"f2 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">View\n                            Profile</a><br> -->\n                        <a routerLink=\"#\" (click)=\"onGoToPage3()\"\n                            [className]=\"f3 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">Edit\n                            Profile</a><br>\n                        <a routerLink=\"#\" (click)=\"onGoToPage4()\"\n                            [className]=\"f4 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">History</a><br>\n                        <a routerLink=\"#\" (click)=\"onGoToPage5()\"\n                            [className]=\"f5 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">Change\n                            Password</a><br>\n                            <a routerLink=\"\"\n                            [className]=\"'list-group-item list-group-item-action bg-light'\">Log Out\n                            </a>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"col-9 offset-0.5\">\n                <app-get-active-sell-request *ngIf=\"f1\"></app-get-active-sell-request>\n                <app-view-details *ngIf=\"f2\"></app-view-details>\n                <app-edit-component *ngIf=\"f3\"></app-edit-component>\n                <app-set-password *ngIf=\"f5\"></app-set-password>\n                <app-show-history *ngIf=\"f4\"></app-show-history>\n                <!-- <router-outlet></router-outlet> -->\n                <!-- <router-outlet name=\"sec\"></router-outlet> -->\n            </div>\n\n        </div>\n        </div>\n        \n    <!-- </div>\n</div> -->","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Bidder} from './edit-component/edit-component.component';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditService {\n\n  constructor(private http:HttpClient) { }\n\n  update(bidder: Bidder) : Observable<any>{\n    let url = \"http://localhost:8094/edit-bidder\";\n    return this.http.post(url,bidder);\n  }\n\n  getBidder(id : number) : Observable<any>{\n    let url = \"http://localhost:8094/view-profile-bidder?id=\"+id;\n    return this.http.get(url);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BidserviceService } from '../bidservice.service';\nimport { SellRequest } from '../get-active-sell-request/get-active-sell-request.component';\n\n@Component({\n  selector: 'app-bidderhistory',\n  templateUrl: './bidderhistory.component.html',\n  styleUrls: ['./bidderhistory.component.css']\n})\nexport class BidderhistoryComponent implements OnInit {\n\n  sellRequestId: number;\n  data: any;\n  bidderId: number;\n  id: number;\n  @Input()\n  data1: SellRequest;\n  \n\n  constructor(private bidservice: BidserviceService) { }\n\n  ngOnInit(): void {\n    this.id =  this.data1.id;\n    // this.showAllSellBid();  \n  }\n  ngOnChanges() {\n    this.id =  this.data1.id;\n    this.showAllSellBid();\n    // console.log(\"id:\");\n    // console.log(this.data.id);\n    // if(this.data==0){\n    //   this.data=this.data1.basePrice;\n    // }\n  }\n  // showAllBid() {\n  //   alert(this.bidderId);\n  //   this.bidservice.fetchAllBid(this.bidderId).subscribe((data) => {\n  //     this.data = data;\n  //     alert(JSON.stringify(data));\n  //   });\n  // }\n\n  showAllSellBid() {\n    // alert(this.sellRequestId);\n    this.bidservice.fetchAllSellBid(this.id).subscribe((data) => {\n      this.data = data;\n      // alert(JSON.stringify(data));\n    });\n  }\n\n}\n","<!-- <p>bidderhistory works!</p> -->\n<!-- <div *ngIf=\"data\">Min. Bid Amount: {{data}}</div> -->\n<!-- <form (ngSubmit)=\"showAllBid()\">\n    Enter your Id : <input type=\"number\" name=\"bidderId\" [(ngModel)]=bidderId /> <br />\n    <button type=\"submit\">Fetch My Bids</button>\n</form> -->\n<script>\n\n    $(document).ready(function () {\n        var myModal = document.getElementById('myModal')\n        var myInput = document.getElementById('myInput')\n        myModal.addEventListener('shown.bs.modal', function () {\n            myInput.focus()\n        })\n    });\n</script>\n\n<!-- <form (ngSubmit)=\"showAllSellBid()\"> -->\n<!-- Enter the Sell Request Id : <input type=\"number\" name=\"sellRequestId\" [(ngModel)]=sellRequestId /> <br /> -->\n<!-- <button class=\"btn btn-link\" (click)=\"showAllSellBid()\" type=\"submit\">\n    Previous Bids\n</button> -->\n<p>\n    <!-- <a class=\"btn btn-sm btn-info\" data-bs-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n      Previous Bids\n    </a> -->\n  </p>\n  <div class=\"collapse\" id=\"collapseExample\">\n    <div class=\"card card-body\">\n        <table class = \"table table-striped table-hover\">\n            <tbody class = \"table-striped\">\n\n        <tr *ngFor=\"let d of data; let i = index\">\n            <td>{{ i + 1 }} </td>\n            <td>{{ d.bidAmount }}</td>\n        </tr>\n    </tbody>\n        \n    </table>\n       </div>\n  </div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-scheme-for-farmers';\r\n}\r\n","<!-- <app-login></app-login><br><br><br><hr> -->\r\n<!-- <app-admin-request></app-admin-request> -->\r\n<!-- <app-register-bidder></app-register-bidder> -->\r\n <!-- <app-registrationfarmer></app-registrationfarmer> -->\r\n <!-- <app-bidinfo></app-bidinfo> -->\r\n <!-- <app-maxbid></app-maxbid> -->\r\n <!-- <app-edit-component></app-edit-component> -->\r\n<!-- <app-place-sellrequest></app-place-sellrequest> -->\r\n<!-- <app-get-active-sell-request></app-get-active-sell-request> -->\r\n<!-- <app-get-active-sell-request></app-get-active-sell-request> -->\r\n<!-- <br><br><br><br><br><hr> -->\r\n\r\n<!-- <app-sample></app-sample> -->\r\n\r\n<nav class=\"navbar navbar-expand-lg navbar navbar-dark\" style=\"background-color:#222222;\">\r\n    <div class=\"container-fluid\">\r\n      <a class=\"navbar-brand\" href=\"#\">LTI MarketPlace</a>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul class=\"navbar-nav\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" routerLink=\"\" aria-current=\"page\">Home</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"about\">About</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"help\">Help</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n\r\n\r\n<router-outlet></router-outlet>\r\n<!-- <div > -->\r\n<footer class=\"container-fluid text-center\">\r\n  <p><i class=\"fa fa-copyright\" aria-hidden=\"true\"></i> 2021 LTI MarketPlace</p>\r\n</footer>\r\n<!-- </div> -->","import { Component, OnInit } from '@angular/core';\nimport { ShowHistoryService } from '../show-history.service';\n\n@Component({\n  selector: 'app-show-history',\n  templateUrl: './show-history.component.html',\n  styleUrls: ['./show-history.component.css']\n})\nexport class ShowHistoryComponent implements OnInit {\n\n  data:any;\n  id:number;\n  type:string;\n  farmerParameters: Array<String> = [\n    'cropName',\n    'basePrice',\n    'maxBidAmount',\n    'status',\n  ];\n \n  bidderParameters: Array<String> = [\n    'cropName',\n    'hisBidAmount',\n    'basePrice',\n    'status',\n    'maxBidAmount',   \n  ];\n  constructor(private showreq:ShowHistoryService) { }\n\n  ngOnInit(): void {\n\n    this.id = parseInt(sessionStorage.getItem('lid'), 10);\n    this.type = sessionStorage.getItem('type');\n\n        if (this.type == 'FARMER') {\n          this.showreq.fetchDetailsFarmer(this.id).subscribe((data) => {\n            this.data = data;\n          });\n        } \n        else if (this.type == 'BIDDER') {\n          this.showreq.fetchDetailsBidder(this.id).subscribe((data) => {\n            this.data = data;\n          });\n        }\n  }\n\n}\n","<div class=\"card\" style=\"width: 50rem;\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Bid Details</h5>\n      <div class=\"card-text\">\n        <div *ngIf=\"data\">\n        <div *ngIf=\"type == 'FARMER'\">\n          <table class=\"table table-striped table-hover\">\n            <thead>\n            <tr>\n              <th>Crop Name</th>\n              <th>Base Price</th>\n              <th>MaxBidAmount</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody class=\"table-striped\">\n            <tr *ngFor=\"let list of data\">\n              <td>{{list.cropName}}</td>\n              <td>{{list.basePrice}}</td>\n              <td>{{list.maxBidAmount}}</td>\n              <td>\n                 <div class=\"btn btn-success btn-sm\" style=\"padding:2px; width:55px; text-align: center;\" *ngIf=\"list.status == 1\">LIVE</div>\n                 <div class=\"btn btn-danger btn-sm\" style=\"padding:2px;\" *ngIf=\"list.status == 0\">CLOSED</div>\n              </td>\n            </tr>\n          </tbody>\n          </table>\n        </div>\n        <div *ngIf=\"type == 'BIDDER'\">\n          <table  class=\"table table-striped table-hover\">\n            <thead>\n                <tr>\n                  <th>Crop Name</th>\n                  <th>Your BidAmount</th>\n                  <th>Base Price</th>\n                  <th>Max BidAmount</th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n             \n              <tbody class=\"table-striped\">\n                <tr *ngFor=\"let list of data\">\n                  <td>{{list.cropName}}</td>\n                  <td>\n                     <div class=\"text-success font-weight-bolder\" *ngIf=\"list.hisBidAmount >= list.maxBidAmount\">{{list.hisBidAmount}}</div>\n                     <div class=\"text-danger font-weight-bolder\" *ngIf=\"list.hisBidAmount < list.maxBidAmount\">{{list.hisBidAmount}} </div>\n                  </td>\n                  <td>{{list.basePrice}}</td>\n                  <td>{{list.maxBidAmount}}</td>\n                  <td>\n                     <div class=\"btn btn-success btn-sm\" style=\"padding:2px; width:55px; text-align: center;\" *ngIf=\"list.status == 1\">LIVE</div>\n                     <div class=\"btn btn-danger btn-sm\" style=\"padding:2px;\" *ngIf=\"list.status == 0\">CLOSED</div>\n                  </td>\n                </tr>\n              </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n    </div>\n  </div>\n  ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Requests } from './Requests';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminRequestsService {\n\n  constructor(private http: HttpClient) {}\n  fetchRequests(): Observable<any>{\n    let url =\"http://localhost:8094/show-requests\";\n    return this.http.get(url);\n  }\n  approveRequests(req:Requests): Observable<any>{\n    let url =\"http://localhost:8094/approve-status\";\n  return this.http.post(url,req);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowHistoryService {\n\n  constructor(private http:HttpClient) { }\n\n  fetchDetailsFarmer(id:number): Observable<any>{\n    let url =\"http://localhost:8094/sellhistory?id=\"+id;\n    return this.http.get(url);\n  }\n  fetchDetailsBidder(id:number): Observable<any>{\n    let url =\"http://localhost:8094/bidder-history?id=\"+id;\n    return this.http.get(url);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AdminRequestComponent } from './admin-request/admin-request.component';\r\nimport { ViewDetailsComponent } from './view-details/view-details.component';\r\nimport { RegisterBidderComponent } from './register-bidder/register-bidder.component';\r\nimport { PlaceSellrequestComponent } from './place-sellrequest/place-sellrequest.component';\r\nimport { GetActiveSellRequestComponent } from './get-active-sell-request/get-active-sell-request.component';\r\nimport { RegistrationfarmerComponent } from './registrationfarmer/registrationfarmer.component';\r\nimport { BidinfoComponent } from './bidinfo/bidinfo.component';\r\nimport { MaxbidComponent } from './maxbid/maxbid.component';\r\nimport { EditComponentComponent } from './edit-component/edit-component.component';\r\nimport { SetPasswordComponent } from './set-password/set-password.component';\r\nimport { FarmerDashboardComponent } from './farmer-dashboard/farmer-dashboard.component';\r\nimport { EditprofilefarmerComponent } from './editprofilefarmer/editprofilefarmer.component';\r\nimport { BidderDashboardComponent } from './bidder-dashboard/bidder-dashboard.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { ShowHistoryComponent } from './show-history/show-history.component';\r\nimport { PicUploadComponent } from './pic-upload/pic-upload.component';\r\nimport { BidderhistoryComponent } from './bidderhistory/bidderhistory.component';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { SampleComponent } from './sample/sample.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    AdminRequestComponent,\r\n    ViewDetailsComponent,\r\n    RegisterBidderComponent,\r\n    PlaceSellrequestComponent,\r\n    GetActiveSellRequestComponent,\r\n    RegistrationfarmerComponent,\r\n    BidinfoComponent,\r\n    MaxbidComponent,\r\n    EditComponentComponent,\r\n    SetPasswordComponent,\r\n    FarmerDashboardComponent,\r\n    EditprofilefarmerComponent,\r\n    BidderDashboardComponent,\r\n    AboutComponent,\r\n    HelpComponent,\r\n    ShowHistoryComponent,\r\n    PicUploadComponent,\r\n    BidderhistoryComponent,\r\n    SampleComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    Ng2SearchPipeModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetActiveSellRequestService {\n\n  constructor(private http:HttpClient) { }\n\n  fetchActiveSellRequest() : Observable<any>{\n    let url = \"http://localhost:8094/getsellrequest\";\n    return this.http.get(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Login } from './Login';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient) { }\n  login(login:Login): Observable<any>{\n    let url =\"http://localhost:8094/login1\";\n    return this.http.post(url,login);\n  }\n  setPassword(creds:Login): Observable<any>{\n    let url =\"http://localhost:8094/set-password\";\n    return this.http.post(url,creds);\n  }\n}\n","export class Login{\r\n    id:string;\r\n    password:string;\r\n    type:string;\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n<link href=\"https://fonts.googleapis.com/css2?family=Staatliches&display=swap\" rel=\"stylesheet\">\n\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1\" crossorigin=\"anonymous\">\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW\" crossorigin=\"anonymous\"></script>\n\n<div class=\"container\" id=\"bbb\">\n<div class=\"mt-4 container text-center\">    \n    <h1>Facing Issues?</h1><br>\n       \n    <div id=\"contact\" class=\"container\">\n      <h2 class=\"text-center\">Contact</h2>\n      <p class=\"text-center\"><em>We love our farmers and bidders!</em></p>\n    \n      <div class=\"row\">\n        <!-- <div class=\"col-md-6\">\n          <p> <span> <i class=\"fa fa-user icon\"></i></span> Farmer? Connect here.</p>\n          <p><span> <i class=\"fa fa-map-pin icon\"></i></span> India</p>\n          <p><span><i class=\"fa fa fa-phone icon\"></i></span>  Phone: +91 9988774562</p>\n          <p> <span> <i class=\"fa fa-envelope icon\"></i></span> Email: mail@gmail.com</p>\n          </div> -->\n\n        <!-- <div class=\"col-md-6\">\n          <p> <span> <i class=\"fa fa-user icon\"></i></span> Bidder? Connect here.</p>\n          <p><span> <i class=\"fa fa-map-pin icon\"></i></span> India</p>\n          <p><span><i class=\"fa fa fa-phone icon\"></i></span>  Phone: +91 8899665123</p>\n          <p> <span> <i class=\"fa fa-envelope icon\"></i></span> Email: mail@gmail.com</p>\n          </div> -->\n\n          <div class=\"card border-primary col-md-5\" >\n            <div class=\"card-header\">Farmer</div>\n            <div class=\"card-body text-primary\">\n              <h5 class=\"card-title\"><p> <span> <i class=\"fa fa-user icon\"></i></span>Farmer? Connect here.</p></h5>\n              <div class=\"card-text\">\n                <!-- <p> <span> <i class=\"fa fa-user icon\"></i></span> Farmer? Connect here.</p> -->\n                <p><span> <i class=\"fa fa-map-pin icon\"></i></span> India</p>\n                <p><span><i class=\"fa fa fa-phone icon\"></i></span>  Phone: +91 9988774562</p>\n                <p> <span> <i class=\"fa fa-envelope icon\"></i></span> Email: mail@gmail.com</p>\n              </div>\n            </div>\n          </div>\n\n\n\n          <div class=\"card border-primary offset-md-2 col-md-5\" >\n            <div class=\"card-header\">Bidder</div>\n            <div class=\"card-body text-primary\">\n              <h5 class=\"card-title\"><p> <span> <i class=\"fa fa-user icon\"></i></span> Bidder? Connect here.</p></h5>\n              <div class=\"card-text\">\n                <!-- <p> <span> <i class=\"fa fa-user icon\"></i></span> Bidder? Connect here.</p> -->\n                <p><span> <i class=\"fa fa-map-pin icon\"></i></span> India</p>\n                <p><span><i class=\"fa fa fa-phone icon\"></i></span>  Phone: +91 8899665123</p>\n                <p> <span> <i class=\"fa fa-envelope icon\"></i></span> Email: mail@gmail.com</p>\n              </div>\n            </div>\n          </div>\n        <!-- </div> -->\n        <!-- <div class=\"col-md-8\">\n          <div class=\"row\">\n            <div class=\"col-sm-6 form-group\">\n              <input class=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Name\" type=\"text\" required>\n            </div>\n            <div class=\"col-sm-6 form-group\">\n              <input class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Email\" type=\"email\" required>\n            </div>\n          </div>\n          <textarea class=\"form-control\" id=\"comments\" name=\"comments\" placeholder=\"Comment\" rows=\"5\"></textarea>\n          <br>\n          <div class=\"row\">\n            <div class=\"col-md-12 form-group\">\n              <button class=\"btn pull-right\" type=\"submit\">Send</button>\n            </div>\n          </div>\n        </div> -->\n      </div>\n      <br>\n\n      </div>\n      \n      <!-- <footer class=\"container-fluid text-center\">\n        <p>Footer Text</p>\n      </footer>   -->","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Login } from '../Login';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-set-password',\n  templateUrl: './set-password.component.html',\n  styleUrls: ['./set-password.component.css']\n})\nexport class SetPasswordComponent implements OnInit {\n// email:string;\n// type:string;\npass1:string;\nmessage:string;\nlogin: Login = new Login();\n  constructor(private loginService: LoginService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.login.id = sessionStorage.getItem('id');\n    this.login.type = sessionStorage.getItem('type');\n  }\n\n  setPassword(){\n    this.login.password =this.pass1;\n    console.log(this.login);\n    if(this.login.password == null){\n      this.message=\"password field is empty\";\n    }\n    else{\n    this.loginService.setPassword(this.login).subscribe((response) => {\n      console.log(response);\n    });\n  \n    // this.message=\"password set\";\n    // console.log(this.email);\n   \n    // console.log(this.email);\n    //call service\n    // alert(\"Password set successfully, Please Login to continue\");\n    this.message=\"Password set, Login to continue\";\n    setTimeout(function(){​​\n      // this.router.navigate([\"login\"]);\n      window.location.replace(\"#\");\n   }​​, 1000);\n    \n  }\n  }\n}\n","<!-- <form (ngSubmit)=\"setPassword()\">\n    Email/Username:<input type=\"email\" name=\"t1\" value={{login.id}} readonly/><br>\n      Password:<input type=\"password\" name=\"t2\" [(ngModel)]=pass1 /><br>\n      <button type=\"submit\">Set Password</button>\n      \n  </form>\n  <div *ngIf=[message]>{{message}}</div> -->\n \n\n  <!-- <div class=\"container min-vh-100 min-vw-100\" id=\"bg\"> -->\n    <div class=\"row h-100 justify-content-center align-items-center\" id=\"bg\">\n    <div class=\"row main\" id=\"box\">\n    <form  (ngSubmit)=\"setPassword()\" style=\"max-width:300px;margin:auto\">\n      <h4 style=\"text-align: center;\">SET PASSWORD</h4><br>\n    \n    \n      <div class=\"input-group input-group-sm mb-3\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">  <i class=\"fa fa-envelope icon\"></i></span>  \n        </div>\n        <input type=\"text\" name=\"t1\" value={{login.id}} readonly placeholder=\"Email\" class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n      </div>\n    \n      <div class=\"input-group input-group-sm mb-3\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-key icon\"></i></span>  \n        </div>\n        <input type=\"password\" id=\"t2\" name=\"t2\" [(ngModel)]=pass1 placeholder=\"Password\" class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" class=\"form-control is-invalid\"  required>\n      </div>\n      \n    \n      \n      <button type=\"submit\" class=\"col-sm-12 align-center btn btn-primary\">Confirm</button>\n      \n      <div class=\"alert alert-danger mt-4\" role=\"alert\" *ngIf=\"message=='password field is empty'\" style=\"padding:5px;\">\n        {{message}}\n      </div> \n      <div class=\"alert alert-success mt-4\" role=\"alert\" *ngIf=\"message=='Password set, Login to continue'\" style=\"padding:5px;\">\n        {{message}}\n      </div> \n    </form>\n    <!-- </div> -->\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FarmerService } from '../farmer.service';\n\n@Component({\n  selector: 'app-pic-upload',\n  templateUrl: './pic-upload.component.html',\n  styleUrls: ['./pic-upload.component.css']\n})\n\n\nexport class PicUploadComponent implements OnInit {\n\n\n  certificate: any;//File;\n  id: any;//number\n  message:string;\n\n  constructor(private farmerService:FarmerService ) { }\n\n  ngOnInit(): void {\n    this.id =sessionStorage.getItem('lid');\n    //this.id=10066;\n  }\n\n  onFileChange(event:any) {//event\n    this.certificate = event.target.files[0];\n  }\n\n  upload() {\n    let formData: FormData = new FormData();\n    formData.append('id', this.id);\n    formData.append('certificate',this.certificate);\n    console.log(formData.get('certificate'));//just to check if we have reference to be uploaded\n    //code to hit the server\n    this.farmerService.picUpload(formData).subscribe(response=>{\n      //alert(JSON.stringify(response));\n      this.message=\"UPLOADED SUCCESSFULLY\"\n    });\n  }\n\n\n}\n","<!-- <p>pic-upload works!</p>\n<form (ngSubmit)=\"upload()\">\n    Select your Property Certificate <input type=\"file\" name=\"t1\" (change)=\"onFileChange($event)\" />\n    <button type=\"submit\" >Upload</button> \n</form> -->\n\n<div class=\"container h-100\">\n    <div class=\"row h-100 justify-content-center align-items-center\">\n    <div class=\"row main\">\n    <form  (ngSubmit)=\"upload()\" style=\"max-width:300px;margin:auto\">\n      <h4 style=\"text-align: center;\">SELECT YOUR PROPERTY CERTIFICATE</h4><br>\n    \n    \n      <div class=\"input-group input-group-sm mb-3\">\n        <input type=\"file\" name=\"t1\" (change)=\"onFileChange($event)\" />\n      </div>\n    \n\n    \n      \n      <button type=\"submit\" class=\"col-sm-12 align-center btn btn-primary\">UPLOAD</button>\n      \n      <div class=\"alert alert-success mt-4\" role=\"alert\" *ngIf=\"message\" style=\"padding:5px;\">\n        {{message}}\n      </div> \n    </form>\n\n    </div>\n    </div>\n    </div>\n","export class Requests {\r\n  id: number;\r\n  status: any;\r\n  type: any;\r\n  bidder: any;\r\n  sellRequest: any;\r\n  farmer: any;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Bidder} from './register-bidder/register-bidder.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BidderService {\n\n  constructor(private http:HttpClient) { }\n\n  register(bidder: Bidder) : Observable<any>{\n    let url = \"http://localhost:8094/register-bidder\";\n    return this.http.post(url,bidder);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-farmer-dashboard',\n  templateUrl: './farmer-dashboard.component.html',\n  styleUrls: ['./farmer-dashboard.component.css']\n})\nexport class FarmerDashboardComponent implements OnInit {\n\n  f1: boolean;\n  f2: boolean;\n  f3: boolean;\n  f4: boolean;\n  f5: boolean;\n  f6: boolean;\n  f7: boolean;\n  onGoToPage1() {\n    this.f1 = true;\n    this.f2 = false;\n    this.f3 = false;\n    this.f4 = false;\n    this.f5 = false;\n    this.f6 = false;\n    this.f7 = false;\n  }\n  onGoToPage2() {\n    this.f1 = false;\n    this.f2 = true;\n    this.f3 = false;\n    this.f4 = false;\n    this.f5 = false;\n    this.f6 = false;\n    this.f7 = false;\n  }\n  onGoToPage3() {\n    this.f1 = false;\n    this.f2 = false;\n    this.f3 = true;\n    this.f4 = false;\n    this.f5 = false;\n    this.f6 = false;\n    this.f7 = false;\n  }\n  onGoToPage4() {\n    this.f1 = false;\n    this.f2 = false;\n    this.f3 = false;\n    this.f4 = true;\n    this.f5 = false;\n    this.f6 = false;\n    this.f7 = false;\n  }\n  onGoToPage5() {\n    this.f1 = false;\n    this.f2 = false;\n    this.f3 = false;\n    this.f4 = false;\n    this.f5 = true;\n    this.f6 = false;\n    this.f7 = false;\n  }\n  onGoToPage6() {\n    this.f1 = false;\n    this.f2 = false;\n    this.f3 = false;\n    this.f4 = false;\n    this.f5 = false;\n    this.f6 = true;\n    this.f7 = false;\n  }\n  onGoToPage7() {\n    this.f1 = false;\n    this.f2 = false;\n    this.f3 = false;\n    this.f4 = false;\n    this.f5 = false;\n    this.f6 = false;\n    this.f7 = true;\n  }\n  constructor() {}\n\n  ngOnInit(): void {\n    this.f1 = true;\n    this.f2 = false;\n    this.f3 = false;\n    this.f4 = false;\n    this.f5 = false;\n    this.f6 = false;\n    this.f7 = false;\n  }\n\n}","<!-- <div class=\"row\">\n<app-marketplace></app-marketplace>\n<div class=\"col lg-3 mt-5\">\n    <a routerLink=\"../viewDetails\">View Profile</a><br>\n    <a routerLink=\"../farmerEditProfile\">Edit Profile</a><br>\n    <a routerLink=\"\">View History</a><br>\n    <a routerLink=\"../setPassword\">Change Password</a> <br>\n    <a routerLink=\"../sellRequest\">Place Sell request</a>\n</div>\n\n    <div class=\"col lg-8 mt-5\">\n<app-get-active-sell-request></app-get-active-sell-request>\n</div>\n</div> -->\n<!-- <div class=\"container h-100\">\n    <div class=\"row h-100 justify-content-center align-items-center\"> -->\n        <div class=\"container min-vh-100 min-vw-100\" id=\"bg\">\n        <div class=\"row\">\n            <div class=\"col-2 mt-5 \">\n\n\n                <div class=\"bg-light border-right\" id=\"sidebar-wrapper\">\n                    \n                    <div class=\"list-group list-group-flush\">\n                        \n                        <a routerLink=\"#\" (click)=\"onGoToPage6()\"\n                            [className]=\"f6 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">Sell Your Crop</a><br>\n                             <a routerLink=\"#\" (click)=\"onGoToPage1()\"\n                            [className]=\"f1 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">Marketplace</a><br>\n                        <a routerLink=\"#\" (click)=\"onGoToPage2()\"\n                            [className]=\"f2 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">View\n                            Profile</a><br>\n                        <a routerLink=\"#\" (click)=\"onGoToPage3()\"\n                            [className]=\"f3 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">Edit\n                            Profile</a><br>\n                        <a routerLink=\"#\" (click)=\"onGoToPage4()\"\n                            [className]=\"f4 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">History</a><br>\n                        <a routerLink=\"#\" (click)=\"onGoToPage5()\"\n                            [className]=\"f5 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">Change\n                            Password</a><br>\n                        <a routerLink=\"#\" (click)=\"onGoToPage7()\"\n                            [className]=\"f7 ? 'dis' : 'list-group-item list-group-item-action bg-light'\">Upload Certificate\n                        </a><br>\n                        <a routerLink=\"\"\n                            [className]=\"'list-group-item list-group-item-action bg-light'\">Log Out\n                        </a>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"col-9 offset-0.5\">\n                <app-place-sellrequest *ngIf=\"f6\"></app-place-sellrequest>\n                <app-get-active-sell-request *ngIf=\"f1\"></app-get-active-sell-request>\n                <app-view-details *ngIf=\"f2\"></app-view-details>\n                <app-editprofilefarmer *ngIf=\"f3\"></app-editprofilefarmer>\n                <app-set-password *ngIf=\"f5\"></app-set-password>\n                <app-show-history *ngIf=\"f4\"></app-show-history>\n                <app-pic-upload *ngIf=\"f7\"></app-pic-upload>\n                <!-- <router-outlet name=\"sec\"></router-outlet> -->\n            </div>\n\n        </div>\n    </div>\n    <!-- </div>\n</div> -->","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Bid } from './bidinfo/bidinfo.component';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BidserviceService {\n\n  constructor(private http: HttpClient) { }\n\n  placebid(bid: Bid) : Observable<any> {\n    let url = \"http://localhost:8094/placing-bid\";\n    return this.http.post(url, bid);\n}\n\n  fetchMaxBid(sellRequestId: number) : Observable<any> {\n    let url = \"http://localhost:8094/max-bid?id=\"+sellRequestId;\n    return this.http.get(url);\n}\n\n// fetchAllBid(bidderId: number) : Observable<any> {\n//     let url = \"http://localhost:8094/all-bids?id=\"+bidderId;\n//     return this.http.get(url);\n// }\n\nfetchAllSellBid(sellRequestId: number) : Observable<any> {\n  let url = \"http://localhost:8094/all-sellbids?id=\"+sellRequestId;\n  return this.http.get(url);\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ViewDetailsServiceService } from '../view-details-service.service';\n\n@Component({\n  selector: 'app-view-details',\n  templateUrl: './view-details.component.html',\n  styleUrls: ['./view-details.component.css'],\n})\nexport class ViewDetailsComponent implements OnInit {\n  id: number;\n  type: string;\n  data: any;\n  dispfarmerParameters: Array<String> = [\n    'Name',\n    'Address',\n    'Area',\n    'City',\n    'State',\n    'Pincode',\n    'Email',\n    'Mobile Number',\n    'Aadhar Number',\n    'IFSC Code',\n    'Certificate',\n    'Status',\n    'Account Number',\n  ];\n  dispbidderParameters: Array<String> = [\n    'Name',\n    'Address',\n    'City',\n    'State',\n    'Pincode',\n    'Email',\n    'Mobile Number',\n    'Aadhar Number',\n    'IFSC Code',\n    'Trader License',\n    'Status',\n    'Account Number',\n  ];\n  farmerParameters: Array<String> = [\n    'name',\n    'address',\n    'area',\n    'city',\n    'state',\n    'pincode',\n    'email',\n    'mobileNo',\n    'aadharNo',\n    'ifscCode',\n    'certificate',\n    'status',\n    'accountNo',\n  ];\n  bidderParameters: Array<String> = [\n    'name',\n    'address',\n    'city',\n    'state',\n    'pincode',\n    'email',\n    'mobileNo',\n    'adhaarNo',\n    'ifscCode',\n    'traderLicense',\n    'status',\n    'accountNo',\n  ];\n  sellRequestParameters: Array<String> = [\n    'cropName',\n    'cropType',\n    'basePrice',\n    'quantity',\n    'phValue',\n    'status',\n    'fertlizerType',\n    'startDate',\n    'endDate',\n  ];\n\n  constructor(private viewDetailsService: ViewDetailsServiceService) {}\n\n  ngOnInit(): void {\n    this.id = parseInt(sessionStorage.getItem('lid'), 10);\n\nthis.type = sessionStorage.getItem('type');\n    if (this.type == 'FARMER') {\n      this.viewDetailsService.fetchDetailsFarmer(this.id).subscribe((data) => {\n        // alert(JSON.stringify(data));\n        this.data = data;\n        console.log(this.data.id);\n        // this.requests=data;\n      });\n    } else if (this.type == 'BIDDER') {\n      this.viewDetailsService.fetchDetailsBidder(this.id).subscribe((data) => {\n        // alert(JSON.stringify(data));\n        // this.requests=data;\n        this.data = data;\n      });\n    }\n    else if (this.type == 'SELLREQUEST') {\n      this.viewDetailsService.fetchDetailsSellRequest(this.id).subscribe((data) => {\n        // alert(JSON.stringify(data));\n        // this.requests=data;\n        this.data = data;\n      });\n    }\n  }\n}\n","<!-- <div *ngIf=\"data.id\">{{data.id}}</div> -->\n<div class=\"container h-100 min-vh-100 min-vw-100\" id=\"bg\">\n<div class=\"card\" style=\"width: 50rem;\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">Personal Details</h5>\n    <!-- <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6> -->\n    <div class=\"card-text\">\n      <div *ngIf=\"data\">\n      <div *ngIf=\"type == 'FARMER'\">\n        <table class=\"table table-striped table-hover\">\n          <thead>\n          <tr>\n            <th>Details</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody class=\"table-striped\">\n          <tr *ngFor=\"let para of farmerParameters;let i=index\">\n            <td>{{ dispfarmerParameters[i] }}</td>\n            <td>{{ data[para] }}</td>\n          </tr>\n        </tbody>\n        </table>\n      </div>\n      <div *ngIf=\"type == 'BIDDER'\">\n        <table  class=\"table table-striped table-hover\">\n          <thead>\n          <tr>\n            <th></th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody class=\"table-striped\">\n          <tr *ngFor=\"let para of bidderParameters;let i=index\">\n            <td>{{ dispbidderParameters[i] }}</td>\n            <td>{{ data[para] }}</td>\n          </tr>\n        </tbody>\n        </table>\n      </div>\n      <div *ngIf=\"type == 'SELLREQUEST'\">\n        <table class=\"table table-striped table-hover\">\n          <thead>\n          <tr>\n            <th></th>\n            <th></th>\n          </tr>\n          </thead>\n          <tbody class=\"table-striped\">\n          <tr *ngFor=\"let para of sellRequestParameters\">\n            <td>{{ para }}</td>\n            <td>{{ data[para] }}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  </div>\n</div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PlaceSellreqServiceService } from '../place-sellreq-service.service';\n\n@Component({\n  selector: 'app-place-sellrequest',\n  templateUrl: './place-sellrequest.component.html',\n  styleUrls: ['./place-sellrequest.component.css']\n})\nexport class PlaceSellrequestComponent implements OnInit {\n\n  sellreq:SellRequest = new SellRequest();\n  response:any;\n\n  constructor(private reqService : PlaceSellreqServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  register(){\n    this.sellreq.sellerId=parseInt(sessionStorage.getItem('lid'), 10);\n    // alert(JSON.stringify(this.sellreq));\n    this.reqService.register(this.sellreq).subscribe(response =>{\n      this.response = response;\n      // alert(JSON.stringify(response));\n      // this.router.navigate([\"farmerDashboard\"]);\n    })\n    // this.response.message=\"Your crop has \n    if(this.response.status=='SUCCESS')\n    setTimeout(function(){​​\n      // this.router.navigate([\"login\"]);\n      window.location.reload();\n      // window.location.replace(\"http://localhost:4200/farmerDashboard\");\n   }​​, 1000);\n }\n\n}\n\nexport class SellRequest {\n  cropName:string;\n  cropType:string;\n  basePrice:number;\n  quantity:number;\n  phValue:Number;\n  fertlizerType:string;\n  status:number = 2;\n  sellerId:number;\n  startDate:Date;\n  endDate:Date;\n}\n","\n<div id=\"bbb\" class=\"container h-100\">\n  <div class=\"row h-100 justify-content-center align-items-center\">\n  <div class=\"row main\">\n    <!-- <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"response\" style=\"padding:5px;\">\n      {{response.status}} ! {{response.message}}\n    </div> -->\n    <div *ngIf=\"response\">\n    <div class=\"alert alert-danger mt-4\" role=\"alert\" *ngIf=\"response.status=='FAILED'\" style=\"padding:5px;\">\n      {{response.message}}\n    </div> \n    <div class=\"alert alert-success mt-4\" role=\"alert\" *ngIf=\"response.status=='SUCCESS'\" style=\"padding:5px;\">\n      {{response.message}}\n    </div>\n   </div>\n  <form  (ngSubmit)=\"register()\" style=\"max-width:300px;margin:auto\">\n    <h4 style=\"text-align: center;\">PLACE SELL REQUEST</h4><br>\n  \n  \n    <div class=\"input-group input-group-sm mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">  <i class=\"fa fa-leaf icon\"></i></span>  \n      </div>\n      <input type=\"text\" name=\"t1\" [(ngModel)]=sellreq.cropName placeholder=\"Crop Name\" required class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n    </div>\n\n    <div class=\"input-group input-group-sm mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">  <i class=\"fa fa-pagelines icon\"></i></span>  \n      </div>\n      <input type=\"text\" name=\"t2\" [(ngModel)]=sellreq.cropType placeholder=\"Crop Type\" required class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n    </div>\n\n    <div class=\"input-group input-group-sm mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">  <i class=\"fa fa-money icon\"></i></span>  \n      </div>\n      <input type=\"text\" name=\"t3\" [(ngModel)]=sellreq.basePrice placeholder=\"Base Price\" required class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n    </div>\n\n    <div class=\"input-group input-group-sm mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">  <i class=\"fa fa-shopping-cart icon\"></i></span>  \n      </div>\n      <input type=\"text\" name=\"t4\" [(ngModel)]=sellreq.quantity placeholder=\"Quantity\" required class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n    </div>\n\n    <div class=\"input-group input-group-sm mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">  <i class=\"fa fa-flask icon\"></i></span>  \n      </div>\n      <input type=\"text\" name=\"t5\" [(ngModel)]=sellreq.phValue placeholder=\"Ph Value\" required class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n    </div>\n\n    <div class=\"input-group input-group-sm mb-3\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">  <i class=\"fa fa-flask icon\"></i></span>  \n      </div>\n      <input type=\"text\" name=\"t6\" [(ngModel)]=sellreq.fertlizerType placeholder=\"Fertilizer Type\" required class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n    </div>\n  \n    <hr>\n\n    Start Date \n    <div class=\"input-group input-group-sm mb-3\">\n      <input type=\"date\" name=\"t7\" [(ngModel)]=sellreq.startDate class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n    </div>\n  \n    End Date \n    <div class=\"input-group input-group-sm mb-3\">\n      <input type=\"date\" name=\"t8\" [(ngModel)]=sellreq.endDate class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n    </div>\n    \n    <button type=\"submit\" class=\"col-sm-12 align-center btn btn-primary\">CONFIRM</button>\n    \n\n  \n    <hr> \n  </form>\n  </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { AdminRequestComponent } from './admin-request/admin-request.component';\r\nimport { BidderDashboardComponent } from './bidder-dashboard/bidder-dashboard.component';\r\nimport { EditComponentComponent } from './edit-component/edit-component.component';\r\nimport { EditprofilefarmerComponent } from './editprofilefarmer/editprofilefarmer.component';\r\nimport { FarmerDashboardComponent } from './farmer-dashboard/farmer-dashboard.component';\r\nimport { GetActiveSellRequestComponent } from './get-active-sell-request/get-active-sell-request.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { PicUploadComponent } from './pic-upload/pic-upload.component';\r\nimport { PlaceSellrequestComponent } from './place-sellrequest/place-sellrequest.component';\r\nimport { RegisterBidderComponent } from './register-bidder/register-bidder.component';\r\nimport { RegistrationfarmerComponent } from './registrationfarmer/registrationfarmer.component';\r\nimport { SetPasswordComponent } from './set-password/set-password.component';\r\nimport { ShowHistoryComponent } from './show-history/show-history.component';\r\nimport { ViewDetailsComponent } from './view-details/view-details.component';\r\nimport {  } from './view-details/view-details.component';\r\n\r\nconst routes: Routes = [\r\n  {path:\"dashboard\",component:AdminRequestComponent},\r\n  {path:\"login\",component:LoginComponent},\r\n  {path:\"viewDetails\",component:ViewDetailsComponent},\r\n  {path:\"farmerRegistration\",component:RegistrationfarmerComponent},\r\n  {path:\"bidderRegistration\",component:RegisterBidderComponent},\r\n  {path:\"setPassword\",component:SetPasswordComponent},\r\n  {path:\"sellRequest\",component:PlaceSellrequestComponent},\r\n  {path:\"farmerDashboard\",component:FarmerDashboardComponent},\r\n  {path:\"farmerEditProfile\",component:EditprofilefarmerComponent},\r\n  {path:\"bidderDashboard\",component:BidderDashboardComponent},\r\n  {path:\"bidderEditProfile\",component:EditComponentComponent},\r\n  {path:\"getActiveSellRequest\",component: GetActiveSellRequestComponent},\r\n  { path: 'about', component:AboutComponent },\r\n  { path: 'help', component: HelpComponent},\r\n  { path: 'showHistory', component: ShowHistoryComponent},\r\n  { path: 'picUpload', component: PicUploadComponent},\r\n  {path:\"\",redirectTo:'/login',pathMatch:'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Login } from '../Login';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  login: Login = new Login();\n  message: string;\n  userType = ['FARMER', 'BIDDER', 'ADMIN'];\n  userTypes = ['FARMER', 'BIDDER'];\n  regType: string;\n  constructor(private loginService: LoginService, private router: Router) {}\n  loginCheck() {\n    // alert(JSON.stringify(this.login));\n    this.loginService.login(this.login).subscribe((response) => {\n      console.log(response);\n      if (response.status == 'SUCCESS') {\n        let id = response.id;\n        this.message = response.message;\n        sessionStorage.setItem('id', String(this.login.id)); //email\n        sessionStorage.setItem('lid', String(id)); //farmer/bidder ID\n        // sessionStorage.setItem(\"email\", String(id));\n\n        if (id == 1) {\n          this.router.navigate(['dashboard']);\n        } else if (this.login.type == 'FARMER') {\n          this.router.navigate(['farmerDashboard']);\n          console.log('farmer login pg');\n          sessionStorage.setItem('type', 'FARMER');\n        } else if (this.login.type == 'BIDDER') {\n          console.log('bidder login pg');\n          this.router.navigate(['bidderDashboard']);\n         \n          sessionStorage.setItem('type', 'BIDDER');\n        }\n        //redirect to respective dashboards\n        //forget pwd and change pwd left yet\n        // this.router.navigate([\"dashboard\"]);\n      } else {\n        this.message = response.message;\n      }\n    });\n  }\n  register() {\n    if (this.regType == 'FARMER') {\n      this.router.navigate(['farmerRegistration']);\n    } else if (this.regType == 'BIDDER') {\n      this.router.navigate(['bidderRegistration']);\n    } else {\n      this.message = 'Select user type to register';\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","<!-- <div class=\"container h-100\">\n  <div class=\"row h-100 justify-content-center align-items-center\">\n      <div class=\"row main\">\n<form (ngSubmit)=\"loginCheck()\" style=\"max-width:300px;margin:auto\">\n  <h4 style=\"text-align: center;\">LOGIN</h4><br>\n  <div class=\"input-group input-group-sm mb-3\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">  <i class=\"fa fa-envelope icon\"></i></span>  \n    </div>\n  Email:<input type=\"email\" name=\"t1\" [(ngModel)]=\"login.id\" class=\"form-control\" aria-label=\"Small\" />\n  </div>\n  <div class=\"input-group input-group-sm mb-3\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-key icon\"></i></span>  \n    </div>\n  Password:<input type=\"password\"name=\"t2\" [(ngModel)]=\"login.password\"  class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"/><br />\n  </div>\n  <div class=\"input-group input-group-sm mb-3\">\n    <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-user icon\"></i></span>  \n    </div>\n  You are a:<select name=\"userType\" [(ngModel)]=\"login.type\" class=\"custom-select\" id=\"inputGroupSelect01\" required>\n    <br />\n    <option *ngFor=\"let u of userType\" [value]=\"u\">{{ u }}</option>\n  </select>\n  </div>\n  <button type=\"submit\" class=\"col-sm-12 align-center btn btn-primary\">Login</button>\n  <div *ngIf=\"[message]\">{{ message }}</div>\n</form>\n<br />\n<hr>\n\n  <p>Create a New Account ? </p>\n  <div class=\"input-group input-group-sm mb-3\">\n    <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-user icon\"></i></span>  \n    </div>\n  </div>\n<form (ngSubmit)=\"register()\"  style=\"max-width:300px;margin:auto\">\n  Register as a:<select name=\"userTypes\" [(ngModel)]=\"regType\" class=\"custom-select\" id=\"inputGroupSelect01\" required>\n    \n    <option *ngFor=\"let u of userTypes\" [value]=\"u\">{{ u }}</option>\n  </select>\n\n  <button type=\"submit\" class=\"col-sm-12 align-center btn btn-primary\">Register</button>\n</form>\n\n</div>\n</div>\n</div> -->\n\n\n<div class=\"container min-vw-100\" id=\"bbb\">\n<div class=\"container h-100\">\n <div class=\"row h-100 justify-content-center align-items-center\"> \n  \n<div class=\"row main\" id=\"box\">\n<form  (ngSubmit)=\"loginCheck()\" style=\"max-width:300px;margin:auto\">\n  <h4 style=\"text-align: center;\">LOGIN</h4><br>\n\n\n  <div class=\"input-group input-group-sm mb-3\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\">  <i class=\"fa fa-envelope icon\"></i></span>  \n    </div>\n    <input type=\"text\" name=\"t1\" [(ngModel)]=\"login.id\" placeholder=\"Email\" class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n  </div>\n\n  <div class=\"input-group input-group-sm mb-3\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-key icon\"></i></span>  \n    </div>\n    <input type=\"password\" name=\"t2\" [(ngModel)]=\"login.password\" placeholder=\"Password\" class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\n  </div>\n\n  <div class=\"input-group input-group-sm mb-3\">\n    <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-user icon\"></i></span>  \n    </div>\n    <select  placeholder=\"User Type\" class=\"custom-select\" id=\"inputGroupSelect01\" name=\"userType\" [(ngModel)]=\"login.type\">\n      <option value=\"FARMER\">Farmer</option>\n      <option value=\"BIDDER\">Bidder</option>\n      <option value=\"ADMIN\">Admin</option>\n    </select>\n  </div>\n  \n  <button type=\"submit\" class=\"col-sm-12 align-center btn btn-primary\">Login</button>\n  \n  <div class=\"alert alert-danger mt-4\" role=\"alert\" *ngIf=\"message\" style=\"padding:5px;\">\n    {{message}}\n  </div>\n\n  <hr> \n</form>\n<br> <br>\n\n<!-- -------------------------------------FORM 2 --------------------------------------------->\n\n <form (ngSubmit)=\"register()\"  style=\"max-width:300px;margin:auto\">\n  <p>Create a New Account ? </p>\n  <div class=\"input-group input-group-sm mb-3\">\n    <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-user icon\"></i></span>  \n    </div>\n    <select  class=\"custom-select\" id=\"inputGroupSelect01\" name=\"userTypes\" [(ngModel)]=\"regType\" class=\"custom-select\" id=\"inputGroupSelect01\">\n      <option value=\"FARMER\">Farmer</option>\n      <option value=\"BIDDER\">Bidder</option>\n    </select>\n  </div>\n \n  <button type=\"submit\" class=\"col-sm-12 align-center btn btn-primary\">Register</button>\n</form>\n</div>\n</div>\n</div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BidderService } from '../bidder.service';\n\n@Component({\n  selector: 'app-register-bidder',\n  templateUrl: './register-bidder.component.html',\n  styleUrls: ['./register-bidder.component.css']\n})\nexport class RegisterBidderComponent implements OnInit {\n\n  b:Bidder = new Bidder();\n  response:any;\n  constructor(private senddetails:BidderService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  register(){\n    // alert(JSON.stringify(this.b));\n    this.senddetails.register(this.b).subscribe(response =>{\n      this.response = response;\n      // alert(JSON.stringify(response));\n      sessionStorage.setItem(\"id\", String(this.b.email));\n      sessionStorage.setItem(\"type\", \"BIDDER\");\n\n      if(this.response.status=='SUCCESS')\n      this.router.navigate(['setPassword']);\n      \n    });\n    console.log(this.b.email);\n    \n }\n\n\n}\n\nexport class Bidder{\n  name:string;\n  address:string;\n  city:string;\n  state:string;\n  pincode:string;\n  mobileNo:string;\n  adhaarNo:string;\n  accountNo:string;\n  traderLicense:string;\n  ifscCode:string;\n  status:number =2;\n  email:string;  \n}\n","<!-- <p>Registration Form</p>\n<form (ngSubmit)=\"register()\">\nName : <input type=\"text\" name=\"t1\" [(ngModel)]=b.name /><br>\nAddress : <input type=\"text\" name=\"t2\" [(ngModel)]=b.address /><br>\nCity : <input type=\"text\" name=\"t3\" [(ngModel)]=b.city /><br>\nState : <input type=\"text\" name=\"t4\" [(ngModel)]=b.state /><br>\npinCode : <input type=\"text\" name=\"t5\" [(ngModel)]=b.pincode /><br>\nMobile No : <input type=\"text\" name=\"t6\" [(ngModel)]=b.mobileNo /><br>\nAadhar No : <input type=\"text\" name=\"t7\" [(ngModel)]=b.adhaarNo /><br>\nAccount No : <input type=\"text\" name=\"t8\" [(ngModel)]=b.accountNo /><br>\nTrader License No : <input type=\"text\" name=\"t9\" [(ngModel)]=b.traderLicense /><br>\nIFSC Code : <input type=\"text\" name=\"t10\" [(ngModel)]=b.ifscCode /><br>\nEmail : <input type=\"text\" name=\"t11\" [(ngModel)]=b.email /><br>\n<br>\n<button type=\"submit\">Place SellRequest</button>   -->\n<div class=\"container min-vh-100 min-vw-100\" id=\"bg\">\n\n  <div class=\"row h-100 justify-content-center align-items-center\">\n\n\n<div class=\"container\" style=\"margin-top: 70px;\">\n\n  <div class=\"row\">\n\n    <div class=\"col-md-6 offset-md-3\">\n      <!-- <h1 style=\"text-align: center;\">REGISTRATION BIDDER</h1> -->\n      <div>\n        <div *ngIf=\"response\">\n          <div class=\"alert alert-danger mt-4\" role=\"alert\" *ngIf=\"response.status == 'FAILED'\"\n            style=\"padding: 5px\">\n            {{ response.message }}\n          </div>\n          <div class=\"alert alert-success mt-4\" role=\"alert\" *ngIf=\"response.status == 'SUCCESS'\"\n            style=\"padding: 5px\">\n            {{ response.message }}\n          </div>\n        </div>\n<form class=\"was-validated needs-validation\" #registerForm=\"ngForm\" (ngSubmit)=\"registerForm.form.valid && register()\" novalidate>\n  <fieldset>\n  <legend style=\"text-align: center;\">REGISTRATION BIDDER</legend>\n  \n  <div class=\"form-group\">\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-user icon\"></i></span>  \n        </div>\n         <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"name=\"t1\" placeholder=\"Full Name\" [(ngModel)]=b.name #t1=\"ngModel\"required/>\n        <!-- <small class=\"text-danger\"\n        *ngIf=\"(t1.touched || registerForm.submitted) && t1.errors?.required\">\n        Name is required \n        </small>   -->\n    </div>\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-home icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t2\" placeholder=\"Address\" [(ngModel)]=b.address #t2=\"ngModel\" required />\n      <!-- <small class=\"text-danger\"\n      *ngIf=\"(t2.touched || registerForm.submitted) && t2.errors?.required\">\n      Address is required\n      </small>  -->\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col md-6\">\n\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-location-arrow icon\"></i></span>  \n    </div>\n    <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t3\" placeholder=\"City\" [(ngModel)]=b.city #t3=\"ngModel\" required/>\n    <!-- <small class=\"text-danger\"\n    *ngIf=\"(t3.touched || registerForm.submitted) && t3.errors?.required\">\n    City is required\n    </small>  -->\n    </div>\n\n    </div>\n\n    <div class=\"col md-6\">\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-map-marker icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"   name=\"t4\" placeholder=\"State\" [(ngModel)]=b.state #t4=\"ngModel\" required/>\n      <!-- <small class=\"text-danger\"\n      *ngIf=\"(t4.touched || registerForm.submitted) && t4.errors?.required\">\n      State is required\n      </small>  -->\n    </div>\n\n    </div>\n\n  </div>\n\n\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-map-pin icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"  name=\"t5\" placeholder=\"Pincode\"[(ngModel)]=b.pincode #t5=\"ngModel\" required />\n      <!-- <small class=\"text-danger\"\n      *ngIf=\"(t5.touched || registerForm.submitted) && t5.errors?.required\">\n      Pincode is required\n      </small>  -->\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col md-6\">\n\n      <div class=\"input-group input-group-sm mb-3 has-validation\"><label class=\"form-label\"></label>\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa fa-phone icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t6\" placeholder=\"Mobile Number\" minlength=\"10\" [(ngModel)]=b.mobileNo #t6=\"ngModel\"required/>\n      <!-- <small class=\"text-danger\" \n      *ngIf=\"(t6.touched || registerForm.submitted) && t6.errors?.required\">\n      Contact number is required\n      </small>  -->\n      <div *ngIf=\"t6.errors\">\n      <!-- <small class=\"text-danger\" *ngIf=\"t6.errors.minlength && (t6.touched || registerForm.submitted)\">\n          Phone number requiredLength is {{t6.errors.minlength?.requiredLength}}\n      </small> -->\n      <div class=\"invalid-tooltip\" *ngIf=\"t6.errors.minlength && (t6.touched || registerForm.submitted)\">\n        <!-- Phone number requiredLength is {{t6.errors.minlength?.requiredLength}} -->\n        Please choose a unique and valid contact number\n      </div></div> \n    </div>\n\n    </div>\n    <div class=\"col md-6\">\n    <div class=\"input-group input-group-sm mb-3 has-validation\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-dollar icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t7\" placeholder=\"Adhaar Number\" minlength=\"12\" [(ngModel)]=b.adhaarNo #t7=\"ngModel\" required/>\n      <!-- <small class=\"text-danger\"\n      *ngIf=\"(t7.touched || registerForm.submitted) && t7.errors?.required\">\n      Aadhaar Number is required\n      </small> -->\n      <div *ngIf=\"t7.errors\">\n      <small class=\"text-danger\" \n      *ngIf=\"t7.errors.minlength && (t7.touched || registerForm.submitted)\">\n            <!-- AadharNo requiredLength is {{t7.errors.minlength?.requiredLength}} -->\n            Please choose a unique and valid Aadhar Number\n    </small>\n      </div>  \n\n      </div>\n\n      </div>\n      </div>\n\n\n      <div class=\"input-group input-group-sm mb-3 has-validation\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-dollar icon\"></i></span>  \n      </div>\n      <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t8\" placeholder=\"Account Number\"[(ngModel)]=b.accountNo #t8=\"ngModel\" required />\n      <!-- <small class=\"text-danger\"\n      *ngIf=\"(t8.touched || registerForm.submitted) && t8.errors?.required\">\n      Account Number is required\n      </small>  -->\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col md-6\">\n\n      <div class=\"input-group input-group-sm mb-3 has-validation\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-dollar icon\"></i></span>  \n        </div>\n        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t9\" placeholder=\"IFSC Code\" [(ngModel)]=b.ifscCode #t9=\"ngModel\" required/>\n        <!-- <small class=\"text-danger\"\n        *ngIf=\"(t9.touched || registerForm.submitted) && t9.errors?.required\">\n        Ifsc Code is required\n        </small>  -->\n      </div>\n\n      </div>\n      <div class=\"col md-6\">\n\n      <div class=\"input-group input-group-sm mb-3 has-validation\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-dollar icon\"></i></span>  \n        </div>\n        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t10\" placeholder=\"Trader License\" [(ngModel)]=b.traderLicense #t10=\"ngModel\" required/>\n        <!-- <small class=\"text-danger\"\n        *ngIf=\"(t10.touched || registerForm.submitted) && t10.errors?.required\">\n        TraderLicence is required\n        </small>  -->\n      </div>\n\n      </div>\n      </div>\n\n      <div class=\"input-group input-group-sm mb-3 has-validation\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-envelope icon\"></i></span>  \n        </div>\n        <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"name=\"t11\" placeholder=\"Email Address\" [(ngModel)]=b.email #t11=\"ngModel\" required/>\n        <!-- <small class=\"text-danger\"\n        *ngIf=\"(t11.touched || registerForm.submitted) && t11.errors?.required\">\n        Email is required\n        </small>  -->\n      </div>\n\n  <!-- FullName:<input type=\"text\" name=\"t1\" [(ngModel)]=b.name #t1=\"ngModel\" required/><br/>\n    <span class=\"text-danger\"\n    *ngIf=\"(t1.touched || registerForm.submitted) && t1.errors?.required\">\n    Name is required \n    </span> \n    <br/>\n    \n    Address:<input type=\"text\" name=\"t2\" [(ngModel)]=b.address #t2=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t2.touched || registerForm.submitted) && t2.errors?.required\">\n    Address is required\n    </span> \n    <br/>\n\n    City:<input type=\"text\" name=\"t3\" [(ngModel)]=b.city #t3=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t3.touched || registerForm.submitted) && t3.errors?.required\">\n    City is required\n    </span> \n    <br/>\n\n    State:<input type=\"text\" name=\"t4\" [(ngModel)]=b.state #t4=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t4.touched || registerForm.submitted) && t4.errors?.required\">\n    State is required\n    </span> \n    <br/>\n\n    Pincode:<input type=\"text\" name=\"t5\" [(ngModel)]=b.pincode #t5=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t5.touched || registerForm.submitted) && t5.errors?.required\">\n    Pincode is required\n    </span> \n    <br/>\n\n    Contact No:<input type=\"text\" name=\"t6\" minlength=\"10\" [(ngModel)]=b.mobileNo #t6=\"ngModel\"required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t6.touched || registerForm.submitted) && t6.errors?.required\">\n    Contact no is required\n    </span> \n    <div *ngIf=\"t6.errors\">\n        <span class=\"text-danger\" *ngIf=\"t6.errors.minlength && (t6.touched || registerForm.submitted)\">\n            Phone number requiredLength is {{t6.errors.minlength?.requiredLength}}\n        </span></div>\n    <br>\n\n    AadharNo:<input type=\"text\" name=\"t7\" minlength=\"16\" [(ngModel)]=b.adhaarNo #t7=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t7.touched || registerForm.submitted) && t7.errors?.required\">\n    AadhaarNumber is required\n    </span> \n    <div *ngIf=\"t7.errors\">\n        <span class=\"text-danger\" *ngIf=\"t7.errors.minlength && (t7.touched || registerForm.submitted)\">\n            AadharNo requiredLength is {{t7.errors.minlength?.requiredLength}}\n        </span></div>\n    <br/>\n      \n    AccountNo:<input type=\"text\" name=\"t8\" [(ngModel)]=b.accountNo #t8=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t8.touched || registerForm.submitted) && t8.errors?.required\">\n    AccountNo is required\n    </span> \n    <br/>\n\n    IFSCCode:<input type=\"text\" name=\"t9\" [(ngModel)]=b.ifscCode #t9=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t9.touched || registerForm.submitted) && t9.errors?.required\">\n    IfscCode is required\n    </span> \n    <br/>\n\n  TraderLicence :<input type=\"text\" name=\"t10\" [(ngModel)]=b.traderLicense #t10=\"ngModel\" required/><br/>\n  <span class=\"text-danger\" \n  *ngIf=\"(t10.touched || registerForm.submitted) && t10.errors?.required\">\n  TraderLicence is required\n  </span> \n  <br/>\n    \n    Email:<input type=\"email\" name=\"t11\" [(ngModel)]=b.email #t11=\"ngModel\" required/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t11.touched || registerForm.submitted) && t11.errors?.required\">\n    Email is required\n    </span> \n    <br/> -->\n    \n    <button class=\"btn btn-primary col-md-6 offset-md-3\" type =\"submit\">Register</button>\n  </div>\n</fieldset>\n  </form>\n  \n  </div>\n  </div>\n  </div>\n  </div>\n\n  </div>\n</div>\n  \n  \n  <div *ngIf=response>\n      <p>{{response.status}} ! {{response.message}}</p>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { FarmerService } from '../farmer.service';\n\n@Component({\n  selector: 'app-editprofilefarmer',\n  templateUrl: './editprofilefarmer.component.html',\n  styleUrls: ['./editprofilefarmer.component.css']\n})\nexport class EditprofilefarmerComponent {\n\n  farmer:Farmer=new Farmer();\n  response:any;\n  report:any;\n  id:number ;\n\n  constructor(private getreq:FarmerService) { }\n\n  ngOnInit(): void {\n    this.id = parseInt(sessionStorage.getItem('lid'), 10);\n    //this.id = sessionStorage.getItem('id');\n    \n    this.getreq.getFarmer(this.id).subscribe(response => {\n      // alert(JSON.stringify(response));\n      this.response = response;\n      this.farmer.id = response.id;\n      this.farmer.name = response.name;\n      this.farmer.address = response.address;\n      this.farmer.city =response.city;\n      this.farmer.city =response.city;\n      this.farmer.state = response.state;\n      this.farmer.pincode =response.pincode;\n      this.farmer.mobileNo = response.mobileNo;\n      this.farmer.aadharNo = response.aadharNo;\n      this.farmer.accountNo = response.accountNo;\n      this.farmer.ifscCode =response.ifscCode;\n      this.farmer.email =response.email;\n      this.farmer.area=response.area;\n\n      });\n\n  }\n\n\n  edit(){\n\n    // alert(JSON.stringify(this.farmer));\n    this.getreq.edit(this.farmer).subscribe(response =>{\n      this.response = response;\n      // alert(JSON.stringify(response));\n    })\n    setTimeout(function(){​​\n      // this.router.navigate([\"login\"]);\n      window.location.reload();\n     }​​, 1500);\n    \n }\n \n\n\n}\n\nexport class Farmer {\n  id: number\n  name: string=\"\"\n  email: string=\"\"\n  mobileNo:string=\"\"\n  address:string=\"\"\n  city:string=\"\"\n  state:string=\"\"\n  pincode:string=\"\"\n  accountNo:string=\"\"\n  ifscCode:string=\"\"\n  aadharNo:string=\"\"\n  status:number=2\n  area:string=\"\"\n}\n\n","<!-- <p>editprofilefarmer works!</p>\n\n<h1>EDITING OF FARMER-DETAILS</h1>\n<form class=\"form\" #registerForm=\"ngForm\" (ngSubmit)=\"registerForm.form.valid && edit()\">\n    Id : <input type=\"text\" value={{farmer.id}} name=\"t12\" readonly><br/>\n    FullName:<input type=\"text\" name=\"t1\" [(ngModel)]=farmer.name #t1=\"ngModel\" required value={{farmer.name}}/><br/>\n    <span class=\"text-danger\"\n    *ngIf=\"(t1.touched || registerForm.submitted) && t1.errors?.required\">\n    Name is required \n    </span> \n    <br/>\n    ContactNo:<input type=\"text\" name=\"t2\" minlength=\"10\" [(ngModel)]=farmer.mobileNo #t2=\"ngModel\"required value={{farmer.mobileNo}}/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t2.touched || registerForm.submitted) && t2.errors?.required\">\n    Contact no is required\n    </span> \n    <div *ngIf=\"t2.errors\">\n    <span class=\"text-danger\" *ngIf=\"t2.errors.minlength && (t2.touched || registerForm.submitted)\">\n        Phone number requiredLength is {{t2.errors.minlength?.requiredLength}}\n    </span></div>\n    <br/>\n    Enter your email:<input type=\"email\" name=\"t3\" [(ngModel)]=farmer.email #t3=\"ngModel\" required value={{farmer.email}}/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t3.touched || registerForm.submitted) && t3.errors?.required\">\n    Email is required\n    </span> \n    <br/>\n    Address:<input type=\"text\" name=\"t4\" [(ngModel)]=farmer.address #t4=\"ngModel\" required value={{farmer.address}}/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t4.touched || registerForm.submitted) && t4.errors?.required\">\n    Address is required\n    </span> \n    <br/>\n    Area:<input type=\"text\" name=\"t11\" [(ngModel)]=farmer.area #t11=\"ngModel\" required value={{farmer.area}}/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t11.touched || registerForm.submitted) && t11.errors?.required\">\n    Area is required\n    </span> \n    <br/>\n    City:<input type=\"text\" name=\"t5\" [(ngModel)]=farmer.city #t5=\"ngModel\" required value={{farmer.city}}/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t5.touched || registerForm.submitted) && t5.errors?.required\">\n    City is required\n    </span> \n    <br/>\n    State:<input type=\"text\" name=\"t6\" [(ngModel)]=farmer.state #t6=\"ngModel\" required value={{farmer.state}}/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t6.touched || registerForm.submitted) && t6.errors?.required\">\n    State is required\n    </span> \n    <br/>\n    Pincode:<input type=\"text\" name=\"t7\" [(ngModel)]=farmer.pincode #t7=\"ngModel\" required value={{farmer.pincode}}/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t7.touched || registerForm.submitted) && t7.errors?.required\">\n    Pincode is required\n    </span> \n    <br/>\n    AccountNo:<input type=\"text\" name=\"t8\" [(ngModel)]=farmer.accountNo #t8=\"ngModel\" required value={{farmer.accountNo}}/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t8.touched || registerForm.submitted) && t8.errors?.required\">\n    AccountNo is required\n    </span> \n    <br/>\n    IFSCCode:<input type=\"text\" name=\"t9\" [(ngModel)]=farmer.ifscCode #t9=\"ngModel\" required value={{farmer.ifscCode}}/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t9.touched || registerForm.submitted) && t9.errors?.required\">\n    IfscCode is required\n    </span> \n    <br/>\n    AadharNo:<input type=\"text\" name=\"t10\" minlength=\"12\" [(ngModel)]=farmer.aadharNo #t10=\"ngModel\" required value={{farmer.aadharNo}}/><br/>\n    <span class=\"text-danger\" \n    *ngIf=\"(t10.touched || registerForm.submitted) && t10.errors?.required\">\n    AadhaarNumber is required\n    </span> \n    <div *ngIf=\"t10.errors\">\n    <span class=\"text-danger\" *ngIf=\"t10.errors.minlength && (t10.touched || registerForm.submitted) \">\n        AadharNo requiredLength is {{t10.errors.minlength?.requiredLength}}\n    </span></div>\n    <br/>\n    <button type =\"submit\">UPDATE</button>\n\n</form>\n\n<div *ngIf=response>\n    <p>{{response.status}} ! {{response.message}}</p>\n</div> -->\n\n\n<div class=\"container h-100\">\n    <div class=\"row h-100 justify-content-center align-items-center\">\n    \n    <div class=\"container\" style=\"margin-top: 70px;\">\n    \n        <div class=\"row main\">\n      \n          <div class=\"col-md-6 offset-md-3\">\n      \n            <div>\n              \n              <div class=\"alert alert-danger mt-4\" role=\"alert\" *ngIf=\"response.status=='FAILED'\" style=\"padding:5px;\">\n                {{response.message}}\n              </div> \n              <div class=\"alert alert-success mt-4\" role=\"alert\" *ngIf=\"response.status=='SUCCESS'\" style=\"padding:5px;\">\n                {{response.message}}\n              </div>    \n    <form class=\"was-validated needs-validation\" #registerForm=\"ngForm\" (ngSubmit)=\"registerForm.form.valid && edit()\" novalidate>\n      <fieldset>\n        <legend style=\"text-align: center;\">Update Profile</legend>\n        <div class=\"form-group\">\n        <div class=\"input-group input-group-sm mb-3\">\n            <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-user icon\"></i></span>  \n            </div>\n            <input type=\"text\" value={{farmer.id}} class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t12\"value={{farmer.id}} placeholder=\"ID\" [(ngModel)]=farmer.id #t12=\"ngModel\" readonly/>\n            <!-- <small class=\"text-danger\"\n            *ngIf=\"(t1.touched || registerForm.submitted) && t1.errors?.required\">\n            Name is required \n            </small>  -->\n        </div>    \n        <div class=\"input-group input-group-sm mb-3 has-validation\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-user icon\"></i></span>  \n            </div>\n            <input type=\"text\" value={{farmer.name}} class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t1\" placeholder=\"Full Name\" [(ngModel)]=farmer.name #t1=\"ngModel\"required/>\n            <!-- <small class=\"text-danger\"\n            *ngIf=\"(t1.touched || registerForm.submitted) && t1.errors?.required\">\n            Name is required \n            </small>  -->\n        </div>\n        <div class=\"input-group input-group-sm mb-3 has-validation\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa fa-phone icon\"></i></span>  \n            </div>\n            <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"name=\"t2\" placeholder=\"Contact Number\" minlength=\"10\" value={{farmer.mobileNo}} [(ngModel)]=farmer.mobileNo #t2=\"ngModel\"required/>\n            <!-- <small class=\"text-danger\" \n            *ngIf=\"(t2.touched || registerForm.submitted) && t2.errors?.required\">\n            Contact number is required\n            </small>  -->\n            <div *ngIf=\"t2.errors\">\n            <div class=\"invalid-tooltip\" *ngIf=\"t2.errors.minlength && (t2.touched || registerForm.submitted)\">\n                <!-- Phone number requiredLength is {{t2.errors.minlength?.requiredLength}} -->\n                Please choose a unique and valid contact number\n            </div></div>\n        </div>\n        <div class=\"input-group input-group-sm mb-3 has-validation\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-envelope icon\"></i></span>  \n            </div>\n            <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"name=\"t3\" placeholder=\"Email Address\" value={{farmer.email}} [(ngModel)]=farmer.email #t3=\"ngModel\"required/>\n            <!-- <small class=\"text-danger\"\n            *ngIf=\"(t3.touched || registerForm.submitted) && t3.errors?.required\">\n            Email is required\n            </small>  -->\n        </div>\n        <div class=\"input-group input-group-sm mb-3 has-validation\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-home icon\"></i></span>  \n            </div>\n            <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t4\" placeholder=\"Address\" value={{farmer.address}} [(ngModel)]=farmer.address #t4=\"ngModel\" required />\n            <!-- <small class=\"text-danger\"\n            *ngIf=\"(t4.touched || registerForm.submitted) && t4.errors?.required\">\n            Address is required\n            </small>  -->\n        </div>\n        <div class=\"row\">\n          <div class=\"col md-6\">\n        \n        <div class=\"input-group input-group-sm mb-3 has-validation\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-street-view icon\"></i></span>  \n            </div>\n            <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"  name=\"t11\" placeholder=\"Area\" value={{farmer.area}} [(ngModel)]=farmer.area #t11=\"ngModel\" required />\n            <!-- <small class=\"text-danger\"\n            *ngIf=\"(t11.touched || registerForm.submitted) && t11.errors?.required\">\n            Area is required\n            </small>  -->\n        </div>\n        </div>\n    \n        <div class=\"col md-6\">\n        <div class=\"input-group input-group-sm mb-3 has-validation\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-location-arrow icon\"></i></span>  \n            </div>\n            <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"   name=\"t5\"  placeholder=\"City\" value={{farmer.city}} [(ngModel)]=farmer.city #t5=\"ngModel\" required/>\n            <!-- <small class=\"text-danger\"\n            *ngIf=\"(t5.touched || registerForm.submitted) && t5.errors?.required\">\n            City is required\n            </small>  -->\n        </div>\n    \n        </div>\n    \n      </div>\n    \n    \n      <div class=\"row\">\n        <div class=\"col md-6\">\n    \n        <div class=\"input-group input-group-sm mb-3 has-validation\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-map-marker icon\"></i></span>  \n            </div>\n            <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"   name=\"t6\" placeholder=\"State\" value={{farmer.state}} [(ngModel)]=farmer.state #t6=\"ngModel\" required/>\n            <!-- <small class=\"text-danger\"\n            *ngIf=\"(t6.touched || registerForm.submitted) && t6.errors?.required\">\n            State is required\n            </small>  -->\n        </div>\n    \n        </div>\n        <div class=\"col md-6\">\n        <div class=\"input-group input-group-sm mb-3 has-validation\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-map-pin icon\"></i></span>  \n            </div>\n            <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"  name=\"t7\" placeholder=\"Pincode\" value={{farmer.pincode}} [(ngModel)]=farmer.pincode #t7=\"ngModel\" required/>\n            <!-- <small class=\"text-danger\"\n            *ngIf=\"(t7.touched || registerForm.submitted) && t7.errors?.required\">\n            Pincode is required\n            </small>  -->\n        </div>\n        </div>\n    \n      </div>\n    \n    \n      <div class=\"row\">\n        <div class=\"col md-6\">\n    \n      \n        <div class=\"input-group input-group-sm mb-3 has-validation\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-dollar icon\"></i></span>  \n            </div>\n            <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t8\" placeholder=\"Account Number\" value={{farmer.accountNo}} [(ngModel)]=farmer.accountNo #t8=\"ngModel\" required/>\n            <!-- <small class=\"text-danger\"\n            *ngIf=\"(t8.touched || registerForm.submitted) && t8.errors?.required\">\n            Account Number is required\n            </small>  -->\n        </div>\n    \n        </div>\n    \n        <div class=\"col md-6\">\n        <div class=\"input-group input-group-sm mb-3 has-validation\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-dollar icon\"></i></span>  \n            </div>\n            <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t9\" placeholder=\"IFSC Code\" value={{farmer.ifscCode}} [(ngModel)]=farmer.ifscCode #t9=\"ngModel\" required/>\n            <!-- <small class=\"text-danger\"\n            *ngIf=\"(t9.touched || registerForm.submitted) && t9.errors?.required\">\n            Ifsc Code is required\n            </small>  -->\n        </div>\n    \n        </div>\n    \n      </div>\n    \n      \n        <div class=\"input-group input-group-sm mb-3 has-validation\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"> <i class=\"fa fa-dollar icon\"></i></span>  \n            </div>\n            <input type=\"text\" class=\"form-control is-invalid\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" name=\"t10\" placeholder=\"Aadhar Number\" minlength=\"12\" value={{farmer.aadharNo}} [(ngModel)]=farmer.aadharNo #t10=\"ngModel\" required/>\n            <!-- <small class=\"text-danger\"\n            *ngIf=\"(t10.touched || registerForm.submitted) && t10.errors?.required\">\n            Aadhaar Number is required\n            </small> -->\n            <div *ngIf=\"t10.errors\">\n            <div class=\"invalid-tooltip\" *ngIf=\"t10.errors.minlength && (t10.touched || registerForm.submitted) \">\n                <!-- AadharNo requiredLength is {{t10.errors.minlength?.requiredLength}}</small> -->\n                Please choose a unique and valid Aadhaar Number\n            </div>  </div>  \n    \n    \n        </div>\n        \n        <button class=\"btn btn-primary col-md-6 offset-md-3\" type =\"submit\">Update</button>\n    </div>\n    </fieldset>\n    </form>\n    \n    </div>\n    </div>\n    </div>\n    </div>\n    \n    </div>\n    </div>\n    \n    <div *ngIf=response>\n        <p> {{response.message}}</p>\n    </div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}